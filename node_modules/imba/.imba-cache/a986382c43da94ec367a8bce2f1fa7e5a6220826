{"id":"fk","warnings":[],"errors":[],"js":"function defineName$__(cls,name){\n\tObject.defineProperty(cls,\"name\",{value:name,configurable:true});\n};;\nfunction extend$__(target,ext){\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(ext);\n\tdelete descriptors.constructor;\n\t// @ts-ignore\n\tObject.defineProperties(target,descriptors);\n\treturn target;\n};\nconst $capture$ = Symbol.for('#capture'), $step$ = Symbol.for('#step'), $cancel$ = Symbol.for('#cancel'), $reframe$ = Symbol.for('#reframe'), $__initor__$ = Symbol.for('#__initor__'), $__inited__$ = Symbol.for('#__inited__'), $__hooks__$ = Symbol.for('#__hooks__'), $mods$ = Symbol.for('#mods'), $dx$ = Symbol.for('#dx'), $dy$ = Symbol.for('#dy'), $context$ = Symbol.for('#context'), $locked$ = Symbol.for('#locked'), $teardown$ = Symbol.for('#teardown'), $x$ = Symbol.for('#x'), $y$ = Symbol.for('#y'), $pinTarget$ = Symbol.for('#pinTarget');\n\n/*body*/\n// imba$imbaPath=global\n\nimport {Event,Element} from '../dom/core';\nimport {listen,once,emit,unlisten} from '../utils';\n\nimport * as helpers from './helpers';\n\nexport function use_events_touch(){\n\t\n\treturn true;\n\t\n};\nlet iosMoveIframeFix = null;\n\nclass Touch {\n\t\n\tconstructor(e,handler,el){\n\t\t\n\t\tthis.phase = 'init';\n\t\tthis.events = [];\n\t\tthis.originalEvent = e;\n\t\tthis.handler = handler;\n\t\tthis.target = this.currentTarget = el;\n\t\tthis[$mods$] = {};\n\t}\n\t\n\tset event(value){\n\t\t\n\t\tthis.events.push(value);\n\t}\n\t\n\tget ctrlKey(){\n\t\treturn this.originalEvent.ctrlKey;\n\t}\n\tget altKey(){\n\t\treturn this.originalEvent.altKey;\n\t}\n\tget shiftKey(){\n\t\treturn this.originalEvent.shiftKey;\n\t}\n\tget metaKey(){\n\t\treturn this.originalEvent.metaKey;\n\t}\n\tget isPrimary(){\n\t\treturn this.originalEvent.isPrimary;\n\t}\n\tget pointerType(){\n\t\treturn this.originalEvent.pointerType;\n\t}\n\t\n\tget start(){\n\t\t\n\t\treturn this.originalEvent;\n\t}\n\t\n\tget originalTarget(){\n\t\t\n\t\treturn this.originalEvent.target;\n\t\t\n\t}\n\tget event(){\n\t\t\n\t\treturn this.events[this.events.length - 1];\n\t}\n\t\n\tget elapsed(){\n\t\t\n\t\treturn this.event.timeStamp - this.events[0].timeStamp;\n\t}\n\t\n\tget type(){\n\t\treturn this.event.type;\n\t}\n\tget pointerId(){\n\t\treturn this.originalEvent.pointerId;\n\t}\n\tget pressure(){\n\t\treturn this.event.pressure;\n\t}\n\tget clientX(){\n\t\treturn this.event.clientX;\n\t}\n\tget clientY(){\n\t\treturn this.event.clientY;\n\t}\n\tget offsetX(){\n\t\treturn this.event.offsetX;\n\t}\n\tget offsetY(){\n\t\treturn this.event.offsetY;\n\t}\n\tget activeΦ(){\n\t\treturn this.phase != 'ended';\n\t}\n\tget endedΦ(){\n\t\treturn this.phase == 'ended';\n\t}\n\t\n\tget dx(){\n\t\t\n\t\treturn (this[$dx$] == undefined) ? (this.event.x - this.start.x) : this[$dx$];\n\t}\n\t\n\tget dy(){\n\t\t\n\t\treturn (this[$dy$] == undefined) ? (this.event.y - this.start.y) : this[$dy$];\n\t}\n\t\n\tstopImmediatePropagation(){\n\t\t\n\t\tthis.cancelBubble = true;\n\t\tthis.event.stopImmediatePropagation();\n\t\treturn this;\n\t}\n\t\n\tstopPropagation(){\n\t\t\n\t\tthis.cancelBubble = true;\n\t\tthis.event.stopPropagation();\n\t\treturn this;\n\t}\n\t\n\tpreventDefault(){\n\t\t\n\t\tthis.defaultPrevented = true;\n\t\treturn this.event.preventDefault();\n\t\t\n\t}\n\temit(name,...params){\n\t\treturn emit(this,name,params);\n\t}\n\ton(name,...params){\n\t\treturn listen(this,name,...params);\n\t}\n\tonce(name,...params){\n\t\treturn once(this,name,...params);\n\t}\n\tun(name,...params){\n\t\treturn unlisten(this,name,...params);\n\t}\n\t\n\tαflag(name,sel){\n\t\t\n\t\tconst {element: element} = this[$context$];\n\t\tconst ts = Date.now();\n\t\tlet el = (sel instanceof Element) ? sel : ((sel ? element.closest(sel) : element));\n\t\t\n\t\tif ((this[$step$].setup != true) ? ((this[$step$].setup = true,true)) : false) {\n\t\t\t\n\t\t\tel.flags.incr(name);\n\t\t\tonce(this,'end',function() {\n\t\t\t\t\n\t\t\t\treturn el.flags.decr(name);\n\t\t\t});\n\t\t};\n\t\t\n\t\treturn true;\n\t}\n\t\n\t\n\tαlock(){\n\t\t\n\t\tthis[$capture$]();\n\t\treturn true;\n\t}\n\t\n\t[$capture$](){\n\t\t\n\t\tif ((this[$locked$] != true) ? ((this[$locked$] = true,true)) : false) {\n\t\t\t\n\t\t\treturn this[$context$].element.setPointerCapture(this.pointerId);\n\t\t};\n\t}\n\tget [$step$](){\n\t\t\n\t\treturn this[$mods$][this[$context$].step] ||= {};\n\t}\n\t\n\t[$cancel$](){\n\t\t\n\t\treturn this[$teardown$]();\n\t\t\n\t}\n\tαmoved(a,b){\n\t\t\n\t\tlet o = this[$step$];\n\t\tconst {element: element,state: state,event: event} = this[$context$];\n\t\t\n\t\tif (!(o.setup)) {\n\t\t\t\n\t\t\tlet th = a || 4;\n\t\t\tif (typeof a == 'string' && a.match(/^(up|down|left|right|x|y)$/)) {\n\t\t\t\t\n\t\t\t\to.dir = a;\n\t\t\t\tth = b || 4;\n\t\t\t\t\n\t\t\t};\n\t\t\tif (typeof b == 'string' && b.match(/^(up|down|left|right|x|y)$/)) {\n\t\t\t\t\n\t\t\t\to.dir = b;\n\t\t\t};\n\t\t\t\n\t\t\to.setup = true;\n\t\t\tlet [tv,tu] = helpers.parseDimension(th);\n\t\t\to.threshold = tv;\n\t\t\to.sy = tv;\n\t\t\to.x0 = this.x;\n\t\t\to.y0 = this.y;\n\t\t\to.dir ||= 'dist';\n\t\t\to.x = o.left = o.right = o.y = o.up = o.down = o.dist = 0;\n\t\t\tif ((tu && tu != 'px')) {\n\t\t\t\t\n\t\t\t\tconsole.warn('only px threshold allowed in @touch.moved');\n\t\t\t};\n\t\t};\n\t\t\n\t\tif (o.active) {\n\t\t\t\n\t\t\treturn true;\n\t\t\t\n\t\t};\n\t\tif (o.cancelled) {\n\t\t\t\n\t\t\treturn false;\n\t\t};\n\t\t\n\t\tlet th = o.threshold;\n\t\tlet dx = this.x - o.x0;\n\t\tlet dy = this.y - o.y0;\n\t\t\n\t\to.x = Math.max(o.x,Math.abs(dx));\n\t\to.y = Math.max(o.y,Math.abs(dy));\n\t\to.left = Math.max(o.left,-dx);\n\t\to.right = Math.max(o.right,dx);\n\t\to.up = Math.max(o.up,-dy);\n\t\to.down = Math.max(o.down,dy);\n\t\to.dist = Math.max(o.dist,Math.sqrt(dx * dx + dy * dy));\n\t\t\n\t\tlet val = o[o.dir];\n\t\t\n\t\tif (val > th && val >= o.x && val >= o.y) {\n\t\t\t\n\t\t\to.active = true;\n\t\t\tlet pinned = state.pinTarget;\n\t\t\telement.flags.incr('@move');\n\t\t\tif (pinned) { pinned.flags.incr('@move') };\n\t\t\tthis.preventDefault();\n\t\t\t\n\t\t\tonce(this,'end',function() {\n\t\t\t\t\n\t\t\t\tif (pinned) { pinned.flags.decr('@move') };\n\t\t\t\treturn element.flags.decr('@move');\n\t\t\t});\n\t\t\treturn true;\n\t\t\t\n\t\t} else if (o.x > th || o.y > th) {\n\t\t\t\n\t\t\to.cancelled = true;\n\t\t\t// #cancel!\n\t\t\treturn false;\n\t\t\t\n\t\t};\n\t\treturn false;\n\t}\n\t\n\tαhold(time = 250){\n\t\tvar self = this;\n\t\t\n\t\tlet o = this[$step$];\n\t\tlet el = this[$context$].element;\n\t\t\n\t\tif (o.cancelled) { return false };\n\t\t\n\t\tif (o.setup && !(o.active)) {\n\t\t\t\n\t\t\tlet x = this.clientX;\n\t\t\tlet y = this.clientY;\n\t\t\t\n\t\t\tlet dx = x - o.x;\n\t\t\tlet dy = y - o.y;\n\t\t\tlet dr = Math.sqrt(dx * dx + dy * dy);\n\t\t\t// cancel\n\t\t\tif (dr > 5 && !(o.cancelled)) {\n\t\t\t\t\n\t\t\t\tclearTimeout(o.timeout);\n\t\t\t\to.cancelled = true;\n\t\t\t\t// #cancel!\n\t\t\t};\n\t\t};\n\t\tif ((o.setup != true) ? ((o.setup = true,true)) : false) {\n\t\t\t\n\t\t\to.active = false;\n\t\t\to.x = this.clientX;\n\t\t\to.y = this.clientY;\n\t\t\t\n\t\t\tlet resolve;\n\t\t\t\n\t\t\to.timeout = setTimeout(function() {\n\t\t\t\t\n\t\t\t\to.active = true;\n\t\t\t\tself.preventDefault();\n\t\t\t\tel.flags.incr(\"@hold\");\n\t\t\t\tif (resolve) { resolve(true) };\n\t\t\t\treturn resolve = null;\n\t\t\t},time);\n\t\t\t\n\t\t\tonce(this,'end',function() {\n\t\t\t\t\n\t\t\t\tif (o.active) {\n\t\t\t\t\t\n\t\t\t\t\tel.flags.decr(\"@hold\");\n\t\t\t\t};\n\t\t\t\tclearTimeout(o.timeout);\n\t\t\t\tif (resolve) { resolve(false) };\n\t\t\t\treturn resolve = null;\n\t\t\t});\n\t\t\t\n\t\t\treturn new Promise(function(_0) { return resolve = _0; });\n\t\t};\n\t\t\n\t\treturn o.active;\n\t\t\n\t}\n\tαsync(item,xalias = 'x',yalias = 'y'){\n\t\t\n\t\tlet o = this[$step$];\n\t\t\n\t\tif ((o.setup != true) ? ((o.setup = true,true)) : false) {\n\t\t\t\n\t\t\to.x = item[xalias] || 0;\n\t\t\to.y = item[yalias] || 0;\n\t\t\to.tx = this.x;\n\t\t\to.ty = this.y;\n\t\t} else {\n\t\t\t\n\t\t\tif (xalias) { item[xalias] = o.x + (this.x - o.tx) };\n\t\t\tif (yalias) { item[yalias] = o.y + (this.y - o.ty) };\n\t\t\t\n\t\t};\n\t\tthis[$context$].commit = true;\n\t\treturn true;\n\t\t\n\t}\n\tαapply(item,xalias = 'x',yalias = 'y'){\n\t\t\n\t\tif (xalias) { item[xalias] = this.x };\n\t\tif (yalias) { item[yalias] = this.y };\n\t\tthis[$context$].commit = true;\n\t\treturn true;\n\t\t\n\t}\n\tαcss(xalias = 'x',yalias = 'y'){\n\t\t\n\t\t\n\t\tlet o = this[$step$];\n\t\tif ((o.setup != true) ? ((o.setup = true,true)) : false) {\n\t\t\t\n\t\t\to.el = this[$context$].element;\n\t\t\to.x = o.el[$x$] || 0;\n\t\t\to.y = o.el[$y$] || 0;\n\t\t\to.tx = this.x;\n\t\t\to.ty = this.y;\n\t\t} else {\n\t\t\t\n\t\t\tlet x = o.el[$x$] = o.x + (this.x - o.tx);\n\t\t\tlet y = o.el[$y$] = o.y + (this.y - o.ty);\n\t\t\t\n\t\t\tif (xalias) { o.el.style.setProperty(\"--x\",x + 'px') };\n\t\t\tif (yalias) { o.el.style.setProperty(\"--y\",y + 'px') };\n\t\t};\n\t\treturn true;\n\t\t\n\t}\n\tαend(){\n\t\t\n\t\treturn this.phase == 'ended';\n\t\t\n\t}\n\tαshift(){\n\t\t\n\t\treturn !(!(this.shiftKey));\n\t}\n\t\n\tαalt(){\n\t\t\n\t\treturn !(!(this.altKey));\n\t}\n\t\n\tαctrl(){\n\t\t\n\t\treturn !(!(this.ctrlKey));\n\t}\n\t\n\tαmeta(){\n\t\t\n\t\treturn !(!(this.metaKey));\n\t\t\n\t}\n\tαprimary(){\n\t\t\n\t\treturn !(!(this.isPrimary));\n\t}\n\t\n\tαmouse(){\n\t\t\n\t\treturn this.pointerType == 'mouse';\n\t}\n\t\n\tαpen(){\n\t\t\n\t\treturn this.pointerType == 'pen';\n\t}\n\t\n\tαtouch(){\n\t\t\n\t\treturn this.pointerType == 'touch';\n\t}\n\t\n\tαpressure(threshold = 0.5){\n\t\t\n\t\treturn this.pressure >= threshold;\n\t\t\n\t}\n\tαlog(...params){\n\t\t\n\t\tconsole.info(...params);\n\t\treturn true;\n\t\t\n\t}\n\tαleft(){\n\t\treturn this.originalEvent.button == 0;\n\t}\n\t\n\tαmiddle(){\n\t\treturn this.originalEvent.button == 1;\n\t}\n\t\n\tαright(){\n\t\treturn this.originalEvent.button == 2;\n\t}\n\t\n\tαround(sx = 1,sy = sx){\n\t\t\n\t\tthis.x = helpers.round(this.x,sx);\n\t\tthis.y = helpers.round(this.y,sy);\n\t\treturn true;\n\t\t\n\t}\n\t[$reframe$](...params){\n\t\t\n\t\tlet o = this[$step$];\n\t\t\n\t\tif ((o.setup != true) ? ((o.setup = true,true)) : false) {\n\t\t\t\n\t\t\tlet el = this.target;\n\t\t\tlet len = params.length;\n\t\t\tlet box = params[0];\n\t\t\tlet min = 0;\n\t\t\tlet max = '100%';\n\t\t\tlet snap = 0;\n\t\t\tlet typ = typeof box;\n\t\t\t\n\t\t\tif (typ == 'number' || (typ == 'string' && (/^([-+]?\\d[\\d\\.]*)(%|\\w+)$/).test(box)) || (box instanceof Array)) {\n\t\t\t\t\n\t\t\t\tbox = null;\n\t\t\t} else if (typ == 'string') {\n\t\t\t\t\n\t\t\t\tif (box == 'this' || box == '') {\n\t\t\t\t\t\n\t\t\t\t\tbox = el;\n\t\t\t\t} else if (box == 'up') {\n\t\t\t\t\t\n\t\t\t\t\tbox = el.parentNode;\n\t\t\t\t} else if (box == 'op') {\n\t\t\t\t\t\n\t\t\t\t\tbox = el.offsetParent;\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tbox = el.closest(box) || el.querySelector(box);\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n\t\t\tif (box == null) {\n\t\t\t\t\n\t\t\t\tlen++;\n\t\t\t\tparams.unshift(box = el);\n\t\t\t};\n\t\t\t\n\t\t\tif (len == 2) {\n\t\t\t\t\n\t\t\t\tsnap = params[1];\n\t\t\t} else if (len > 2) {\n\t\t\t\t\n\t\t\t\t[min,max,snap = 0] = params.slice(1);\n\t\t\t};\n\t\t\t\n\t\t\tlet rect = box.getBoundingClientRect();\n\t\t\tif (!((min instanceof Array))) { min = [min,min] };\n\t\t\tif (!((max instanceof Array))) { max = [max,max] };\n\t\t\tif (!((snap instanceof Array))) { snap = [snap,snap] };\n\t\t\t\n\t\t\to.rect = rect;\n\t\t\to.x = helpers.createScale(rect.left,rect.right,min[0],max[0],snap[0]);\n\t\t\to.y = helpers.createScale(rect.top,rect.bottom,min[1],max[1],snap[1]);\n\t\t\tthis.x0 = this.x = o.x(this.x,o.clamp);\n\t\t\tthis.y0 = this.y = o.y(this.y,o.clamp);\n\t\t} else {\n\t\t\t\n\t\t\tlet x = this.x = o.x(this.x,o.clamp);\n\t\t\tlet y = this.y = o.y(this.y,o.clamp);\n\t\t\tthis[$dx$] = x - this.x0;\n\t\t\tthis[$dy$] = y - this.y0;\n\t\t};\n\t\t\n\t\treturn true;\n\t}\n\t\n\tαfit(...params){\n\t\t\n\t\tthis[$step$].clamp = true;\n\t\treturn this[$reframe$](...params);\n\t}\n\t\n\tαreframe(...params){\n\t\t\n\t\treturn this[$reframe$](...params);\n\t}\n\t\n\t/*\n\t\tAllow pinning the touch to a certain point in an element, so that\n\t\tall future x,y values are relative to this pinned point.\n\t\tYou can include relative anchors for x and y\n\t\n\t\tMake x,y relative to the center of the parent:\n\t\t\t<box.target> <div.handle @touch.pin('.target',0.5,0.5)>\n\t\n\t\t(targetElement,anchorX?, anchorY?)\n\t\t*/\n\t\n\t/**\n\t\n\t\tAllow pinning the touch to a certain point in an element, so that\n\t\tall future x,y values are relative to this pinned point.\n\t\tYou can include relative anchors for x and y\n\t\n\t\tMake x,y relative to the center of the parent:\n\t\t\t<box.target> <div.handle @touch.pin('.target',0.5,0.5)>\n\t\n\t\t(targetElement,anchorX?, anchorY?)\n\t\t\n\t*/\n\tαpin(...params){\n\t\t\n\t\tlet o = this[$step$];\n\t\t\n\t\t// TODO warn if pin comes after reframe\n\t\t\n\t\tif ((o.setup != true) ? ((o.setup = true,true)) : false) {\n\t\t\t\n\t\t\tlet box = helpers.toElement(params[0],this.target);\n\t\t\t\n\t\t\tif (!((box instanceof Element))) {\n\t\t\t\t\n\t\t\t\tparams.unshift(box = this.target);\n\t\t\t};\n\t\t\t\n\t\t\tlet ax = params[1] || 0;\n\t\t\tlet ay = params[2] ??= ax;\n\t\t\tlet rect = box.getBoundingClientRect();\n\t\t\t\n\t\t\to.x = this.clientX - (rect.left + rect.width * ax);\n\t\t\to.y = this.clientY - (rect.top + rect.height * ay);\n\t\t\t\n\t\t\tif (box) {\n\t\t\t\t\n\t\t\t\tthis[$pinTarget$] = box;\n\t\t\t\tbox.flags.incr('_touch_');\n\t\t\t\tonce(this,'end',function() { return box.flags.decr('_touch_'); });\n\t\t\t};\n\t\t\t// console.log 'pinning',o,box\n\t\t};\n\t\t\n\t\tthis.x -= o.x;\n\t\tthis.y -= o.y;\n\t\treturn true;\n\t}\n\tstatic {\n\t\tdefineName$__(this,'Touch');}\n};\n\nclass ΩElement {\n\t\n\ton$touch(mods,context,handler,o){\n\t\t\n\t\thandler.type = 'touch';\n\t\tthis.addEventListener('pointerdown',handler,{passive: false});\n\t\tif (helpers.navigator.iosΦ && globalThis.parent != globalThis) {\n\t\t\t\n\t\t\tif ((iosMoveIframeFix != true) ? ((iosMoveIframeFix = true,true)) : false) {\n\t\t\t\t\n\t\t\t\tglobalThis.parent.postMessage('setupTouchFix');\n\t\t\t};\n\t\t};\n\t\t\n\t\treturn handler;\n\t\t\n\t}\n\tstatic {\n\t\tdefineName$__(this,'Element');}\n};\nextend$__(Element.prototype,ΩElement.prototype);\n;\nif (true && globalThis.parent == globalThis && helpers.navigator.iosΦ) {\n\t\n\tlet fix = function(e) {\n\t\t\n\t\tif (e.data == 'setupTouchFix') {\n\t\t\t\n\t\t\tglobalThis.addEventListener('touchmove',function() { return false; },{passive: false});\n\t\t\treturn globalThis.removeEventListener('message',fix);\n\t\t};\n\t};\n\tglobalThis.addEventListener('message',fix);\n\t\n};\nEvent.touch$handle = function (){\n\t\n\tlet e = this.event;\n\tlet el = this.element;\n\tlet id = this.state.pointerId;\n\tlet m = this.modifiers;\n\tlet handler = this.handler;\n\tlet ios = helpers.navigator.iosΦ;\n\t\n\tthis.current = this.state;\n\t\n\tif (id != undefined) {\n\t\t\n\t\treturn id == e.pointerId;\n\t\t\n\t};\n\t\n\t// reject the touch before creation for certain modifiers\n\t// TODO should allow specifying pen OR mouse etc\n\t// FIXME these will not work with negated modifiers\n\tif (m.ctrl && !(e.ctrlKey)) { return };\n\tif (m.alt && !(e.altKey)) { return };\n\tif (m.meta && !(e.metaKey)) { return };\n\tif (m.shift && !(e.shiftKey)) { return };\n\tif (m.if && !(!(m.if[0])) == false) { return };\n\tif (m.self && e.target != el) { return };\n\tif (m.primary && !(e.isPrimary)) { return };\n\tif (m.pen && e.pointerType != 'pen') { return };\n\tif (m.mouse && e.pointerType != 'mouse') { return };\n\tif (m.touch && e.pointerType != 'touch') { return };\n\tif (m.sel && !(e.target.matches(String(m.sel[0])))) { return };\n\t\n\tlet t = this.state = handler.state = this.current = new Touch(e,handler,el);\n\tid = t.pointerId;\n\t\n\tlet canceller = function(e) {\n\t\t\n\t\te.preventDefault();\n\t\treturn false;\n\t};\n\t\n\tlet teardown = null;\n\tlet sym = Symbol();\n\t\n\tlet onclick = function(e) {\n\t\t\n\t\t// console.debug \"ONCLICK!\",e,e.pointerId,t.clientX,t.clientY,e.clientX,e.clientY\n\t\tlet tx = t.clientX;\n\t\tlet ty = t.clientY;\n\t\tlet ex = e.clientX;\n\t\tlet ey = e.clientY;\n\t\t\n\t\tif ((t[$locked$] || t.defaultPrevented) && ((e.pointerId == t.pointerId) || (tx == ex && ty == ey))) {\n\t\t\t\n\t\t\te.preventDefault();\n\t\t\te.stopPropagation();\n\t\t\t\n\t\t};\n\t\tif (onclick) {\n\t\t\t\n\t\t\tglobalThis.removeEventListener('click',onclick,{capture: true});\n\t\t\tonclick = null;\n\t\t};\n\t\treturn;\n\t\t\n\t};\n\tlet ontouch = function(e) {\n\t\t\n\t\tif (t.type == 'touchmove' && e.changedTouches[0].identifier != id) {\n\t\t\t\n\t\t\treturn;\n\t\t};\n\t\t// console.debug 'ontouch',e.type,t.defaultPrevented,e.changedTouches\n\t\tif (t.defaultPrevented || t[$locked$]) {\n\t\t\t\n\t\t\treturn e.preventDefault();\n\t\t};\n\t};\n\tlet listener = function(e) {\n\t\t\n\t\tlet typ = e.type;\n\t\tlet ph = t.phase;\n\t\t// console.debug \"listen\",e.type,e.pointerId\n\t\tif (e.pointerId && t.pointerId != e.pointerId) { return };\n\t\t\n\t\tif (e[sym]) {\n\t\t\t\n\t\t\treturn;\n\t\t};\n\t\t\n\t\te[sym] = true;\n\t\t\n\t\t\n\t\tlet end = typ == 'pointerup' || typ == 'pointercancel';\n\t\t\n\t\t// if the pressure is suddenly 0 it indicates there has been a\n\t\t// pointerup event not captured by the browser\n\t\tif (e.pressure == 0 && e.pointerType == 'mouse' && typ == 'pointermove' && t.originalEvent.pressure > 0) {\n\t\t\t\n\t\t\treturn teardown(e);\n\t\t};\n\t\t\n\t\tif (typ == 'pointercancel') {\n\t\t\t\n\t\t\tt.x = t.clientX;\n\t\t\tt.y = t.clientY;\n\t\t} else {\n\t\t\t\n\t\t\tt.x = e.clientX;\n\t\t\tt.y = e.clientY;\n\t\t\t\n\t\t};\n\t\tt.event = e;\n\t\t\n\t\tif (end) {\n\t\t\t\n\t\t\tt.phase = 'ended';\n\t\t\t\n\t\t};\n\t\ttry {\n\t\t\thandler.handleEvent(t);\n\t\t} catch (e) { };\n\t\t\n\t\tif (ph == 'init' && !(end)) {\n\t\t\t\n\t\t\tt.phase = 'active';\n\t\t\t\n\t\t};\n\t\tif (end && teardown) {\n\t\t\t\n\t\t\treturn teardown(e);\n\t\t};\n\t};\n\t\n\tlet disposed = false;\n\t\n\tteardown = function(e) {\n\t\t\n\t\tif (disposed) { return };\n\t\tdisposed = true;\n\t\tel.flags.decr('_touch_');\n\t\t\n\t\tif (t.phase != 'ended') {\n\t\t\t\n\t\t\tt.phase = 'ended';\n\t\t\tt.x = t.clientX;\n\t\t\tt.y = t.clientY;\n\t\t\thandler.handleEvent(t);\n\t\t};\n\t\t\n\t\tt.emit('end');\n\t\t\n\t\tif (!(m.passive)) {\n\t\t\t\n\t\t\tif ((--handler.prevents) == 0) {\n\t\t\t\t\n\t\t\t\tel.style.removeProperty('touch-action');\n\t\t\t};\n\t\t};\n\t\t\n\t\thandler.state = {};\n\t\t\n\t\tglobalThis.removeEventListener('pointermove',listener,{passive: !(!(m.passive))});\n\t\tglobalThis.removeEventListener('pointerup',listener);\n\t\tglobalThis.removeEventListener('pointercancel',listener);\n\t\t\n\t\tsetTimeout(function() {\n\t\t\t\n\t\t\tif (onclick) {\n\t\t\t\t\n\t\t\t\tglobalThis.removeEventListener('click',onclick,{capture: true});\n\t\t\t\tonclick = null;\n\t\t\t\t\n\t\t\t};\n\t\t\tif (ios && ontouch) {\n\t\t\t\t\n\t\t\t\tglobalThis.removeEventListener('touchend',ontouch);\n\t\t\t\tglobalThis.removeEventListener('touchmove',ontouch,{passive: false});\n\t\t\t\treturn ontouch = null;\n\t\t\t};\n\t\t},100);\n\t\t\n\t\tif (!(m.passive)) {\n\t\t\t\n\t\t\treturn globalThis.document.removeEventListener('selectstart',canceller,{capture: true});\n\t\t};\n\t};\n\tt[$teardown$] = teardown;\n\t\n\tif (!(m.passive)) {\n\t\t\n\t\thandler.prevents ||= 0;\n\t\thandler.prevents++;\n\t\tel.style.setProperty('touch-action','none');\n\t\tel.offsetWidth;\n\t};\n\t\n\tel.flags.incr('_touch_');\n\tglobalThis.addEventListener('pointermove',listener,{passive: !(!(m.passive))});\n\tglobalThis.addEventListener('pointerup',listener);\n\tglobalThis.addEventListener('pointercancel',listener);\n\tglobalThis.addEventListener('click',onclick,{capture: true});\n\t\n\tif (ios && !(m.passive)) {\n\t\t\n\t\tglobalThis.addEventListener('touchend',ontouch);\n\t\tglobalThis.addEventListener('touchmove',ontouch,{passive: false});\n\t};\n\t\n\tif (!(m.passive)) {\n\t\t\n\t\tglobalThis.document.addEventListener('selectstart',canceller,{capture: true});\n\t};\n\t\n\tlistener(e);\n\treturn false;\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidG91Y2guaW1iYSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbInRvdWNoLmltYmEiXSwic291cmNlc0NvbnRlbnQiOlsiIyBpbWJhJGltYmFQYXRoPWdsb2JhbFxuXG5pbXBvcnQge0V2ZW50LEVsZW1lbnR9IGZyb20gJy4uL2RvbS9jb3JlJ1xuaW1wb3J0IHtsaXN0ZW4sb25jZSxlbWl0LHVubGlzdGVufSBmcm9tICcuLi91dGlscydcblxuaW1wb3J0ICogYXMgaGVscGVycyBmcm9tICcuL2hlbHBlcnMnXG5cbmV4cG9ydCBkZWYgdXNlX2V2ZW50c190b3VjaFxuXHR5ZXNcblx0XG5sZXQgaW9zTW92ZUlmcmFtZUZpeCA9IG51bGxcblxuY2xhc3MgVG91Y2hcblx0ZGVmIGNvbnN0cnVjdG9yIGUsaGFuZGxlcixlbFxuXHRcdHBoYXNlID0gJ2luaXQnXG5cdFx0ZXZlbnRzID0gW11cblx0XHRvcmlnaW5hbEV2ZW50ID0gZVxuXHRcdGhhbmRsZXIgPSBoYW5kbGVyXG5cdFx0dGFyZ2V0ID0gY3VycmVudFRhcmdldCA9IGVsXG5cdFx0I21vZHMgPSB7fVxuXHRcblx0c2V0IGV2ZW50IHZhbHVlXG5cdFx0ZXZlbnRzLnB1c2godmFsdWUpXG5cblx0Z2V0IGN0cmxLZXkgZG8gb3JpZ2luYWxFdmVudC5jdHJsS2V5XG5cdGdldCBhbHRLZXkgZG8gb3JpZ2luYWxFdmVudC5hbHRLZXlcblx0Z2V0IHNoaWZ0S2V5IGRvIG9yaWdpbmFsRXZlbnQuc2hpZnRLZXlcblx0Z2V0IG1ldGFLZXkgZG8gb3JpZ2luYWxFdmVudC5tZXRhS2V5XG5cdGdldCBpc1ByaW1hcnkgZG8gb3JpZ2luYWxFdmVudC5pc1ByaW1hcnlcblx0Z2V0IHBvaW50ZXJUeXBlIGRvIG9yaWdpbmFsRXZlbnQucG9pbnRlclR5cGVcblx0XG5cdGdldCBzdGFydFxuXHRcdG9yaWdpbmFsRXZlbnRcblxuXHRnZXQgb3JpZ2luYWxUYXJnZXRcblx0XHRvcmlnaW5hbEV2ZW50LnRhcmdldFxuXHRcdFxuXHRnZXQgZXZlbnRcblx0XHRldmVudHNbZXZlbnRzLmxlbmd0aCAtIDFdXG5cdFxuXHRnZXQgZWxhcHNlZFxuXHRcdGV2ZW50LnRpbWVTdGFtcCAtIGV2ZW50c1swXS50aW1lU3RhbXBcblx0XG5cdGdldCB0eXBlIGRvIGV2ZW50LnR5cGVcblx0Z2V0IHBvaW50ZXJJZCBkbyBvcmlnaW5hbEV2ZW50LnBvaW50ZXJJZFxuXHRnZXQgcHJlc3N1cmUgZG8gZXZlbnQucHJlc3N1cmVcblx0Z2V0IGNsaWVudFggZG8gZXZlbnQuY2xpZW50WFxuXHRnZXQgY2xpZW50WSBkbyBldmVudC5jbGllbnRZXG5cdGdldCBvZmZzZXRYIGRvIGV2ZW50Lm9mZnNldFhcblx0Z2V0IG9mZnNldFkgZG8gZXZlbnQub2Zmc2V0WVxuXHRnZXQgYWN0aXZlPyBkbyBwaGFzZSAhPSAnZW5kZWQnXG5cdGdldCBlbmRlZD8gZG8gcGhhc2UgPT0gJ2VuZGVkJ1xuXHRcdFxuXHRnZXQgZHhcblx0XHQjZHggPT0gdW5kZWZpbmVkID8gZXZlbnQueCAtIHN0YXJ0LnggOiAjZHhcblx0XG5cdGdldCBkeVxuXHRcdCNkeSA9PSB1bmRlZmluZWQgPyBldmVudC55IC0gc3RhcnQueSA6ICNkeVxuXG5cdGRlZiBzdG9wSW1tZWRpYXRlUHJvcGFnYXRpb25cblx0XHRjYW5jZWxCdWJibGUgPSB5ZXNcblx0XHRldmVudC5zdG9wSW1tZWRpYXRlUHJvcGFnYXRpb24hXG5cdFx0c2VsZlxuXG5cdGRlZiBzdG9wUHJvcGFnYXRpb25cblx0XHRjYW5jZWxCdWJibGUgPSB5ZXNcblx0XHRldmVudC5zdG9wUHJvcGFnYXRpb24hXG5cdFx0c2VsZlxuXG5cdGRlZiBwcmV2ZW50RGVmYXVsdFxuXHRcdGRlZmF1bHRQcmV2ZW50ZWQgPSB5ZXNcblx0XHRldmVudC5wcmV2ZW50RGVmYXVsdCFcblx0XHRcblx0ZGVmIGVtaXQgbmFtZSwgLi4ucGFyYW1zIGRvIGVtaXQoc2VsZixuYW1lLHBhcmFtcylcblx0ZGVmIG9uIG5hbWUsIC4uLnBhcmFtcyBkbyBsaXN0ZW4oc2VsZixuYW1lLC4uLnBhcmFtcylcblx0ZGVmIG9uY2UgbmFtZSwgLi4ucGFyYW1zIGRvIG9uY2Uoc2VsZixuYW1lLC4uLnBhcmFtcylcblx0ZGVmIHVuIG5hbWUsIC4uLnBhcmFtcyBkbyB1bmxpc3RlbihzZWxmLG5hbWUsLi4ucGFyYW1zKVxuXHRcdFxuXHRkZWYgQGZsYWcgbmFtZSwgc2VsXG5cdFx0Y29uc3Qge2VsZW1lbnR9ID0gI2NvbnRleHRcblx0XHRjb25zdCB0cyA9IERhdGUubm93IVxuXHRcdGxldCBlbCA9IHNlbCBpc2EgRWxlbWVudCA/IHNlbCA6IChzZWwgPyBlbGVtZW50LmNsb3Nlc3Qoc2VsKSA6IGVsZW1lbnQpXG5cblx0XHRpZiAjc3RlcC5zZXR1cCA9PyB5ZXNcblx0XHRcdGVsLmZsYWdzLmluY3IobmFtZSlcblx0XHRcdG9uY2Uoc2VsZiwnZW5kJykgZG9cblx0XHRcdFx0ZWwuZmxhZ3MuZGVjcihuYW1lKVxuXG5cdFx0cmV0dXJuIHllc1xuXG5cdFxuXHRkZWYgQGxvY2tcblx0XHQjY2FwdHVyZSFcblx0XHR5ZXNcblxuXHRkZWYgI2NhcHR1cmVcblx0XHRpZiAjbG9ja2VkID0/IHllc1xuXHRcdFx0I2NvbnRleHQuZWxlbWVudC5zZXRQb2ludGVyQ2FwdHVyZShwb2ludGVySWQpXG5cdFx0XG5cdGdldCAjc3RlcFxuXHRcdCNtb2RzWyNjb250ZXh0LnN0ZXBdIHx8PSB7fVxuXG5cdGRlZiAjY2FuY2VsXG5cdFx0I3RlYXJkb3duIVxuXHRcdFxuXHRkZWYgQG1vdmVkIGEsYlxuXHRcdGxldCBvID0gI3N0ZXBcblx0XHRjb25zdCB7ZWxlbWVudCxzdGF0ZSxldmVudH0gPSAjY29udGV4dFxuXG5cdFx0dW5sZXNzIG8uc2V0dXBcblx0XHRcdGxldCB0aCA9IGEgb3IgNFxuXHRcdFx0aWYgdHlwZW9mIGEgPT0gJ3N0cmluZycgYW5kIGEubWF0Y2goL14odXB8ZG93bnxsZWZ0fHJpZ2h0fHh8eSkkLylcblx0XHRcdFx0by5kaXIgPSBhXG5cdFx0XHRcdHRoID0gYiBvciA0XG5cdFx0XHRcdFxuXHRcdFx0aWYgdHlwZW9mIGIgPT0gJ3N0cmluZycgYW5kIGIubWF0Y2goL14odXB8ZG93bnxsZWZ0fHJpZ2h0fHh8eSkkLylcblx0XHRcdFx0by5kaXIgPSBiXG5cblx0XHRcdG8uc2V0dXAgPSB5ZXNcblx0XHRcdGxldCBbdHYsdHVdID0gaGVscGVycy5wYXJzZURpbWVuc2lvbih0aClcblx0XHRcdG8udGhyZXNob2xkID0gdHZcblx0XHRcdG8uc3kgPSB0dlxuXHRcdFx0by54MCA9IHhcblx0XHRcdG8ueTAgPSB5XG5cdFx0XHRvLmRpciB8fD0gJ2Rpc3QnXG5cdFx0XHRvLnggPSBvLmxlZnQgPSBvLnJpZ2h0ID0gby55ID0gby51cCA9IG8uZG93biA9IG8uZGlzdCA9IDBcblx0XHRcdGlmICh0dSBhbmQgdHUgIT0gJ3B4Jylcblx0XHRcdFx0Y29uc29sZS53YXJuICdvbmx5IHB4IHRocmVzaG9sZCBhbGxvd2VkIGluIEB0b3VjaC5tb3ZlZCdcblxuXHRcdGlmIG8uYWN0aXZlXG5cdFx0XHRyZXR1cm4geWVzXG5cdFx0XHRcblx0XHRpZiBvLmNhbmNlbGxlZFxuXHRcdFx0cmV0dXJuIG5vXG5cdFx0XG5cdFx0bGV0IHRoID0gby50aHJlc2hvbGRcblx0XHRsZXQgZHggPSB4IC0gby54MFxuXHRcdGxldCBkeSA9IHkgLSBvLnkwXG5cdFx0XG5cdFx0by54ID0gTWF0aC5tYXgoby54LE1hdGguYWJzKGR4KSlcblx0XHRvLnkgPSBNYXRoLm1heChvLnksTWF0aC5hYnMoZHkpKVxuXHRcdG8ubGVmdCA9IE1hdGgubWF4KG8ubGVmdCwtZHgpXG5cdFx0by5yaWdodCA9IE1hdGgubWF4KG8ucmlnaHQsZHgpXG5cdFx0by51cCA9IE1hdGgubWF4KG8udXAsLWR5KVxuXHRcdG8uZG93biA9IE1hdGgubWF4KG8uZG93bixkeSlcblx0XHRvLmRpc3QgPSBNYXRoLm1heChvLmRpc3QsTWF0aC5zcXJ0KGR4KmR4ICsgZHkqZHkpKVxuXHRcdFxuXHRcdGxldCB2YWwgPSBvW28uZGlyXVxuXG5cdFx0aWYgdmFsID4gdGggYW5kIHZhbCA+PSBvLnggYW5kIHZhbCA+PSBvLnlcblx0XHRcdG8uYWN0aXZlID0geWVzXG5cdFx0XHRsZXQgcGlubmVkID0gc3RhdGUucGluVGFyZ2V0XG5cdFx0XHRlbGVtZW50LmZsYWdzLmluY3IoJ0Btb3ZlJylcblx0XHRcdHBpbm5lZC5mbGFncy5pbmNyKCdAbW92ZScpIGlmIHBpbm5lZFxuXHRcdFx0cHJldmVudERlZmF1bHQhXG5cblx0XHRcdG9uY2Uoc2VsZiwnZW5kJykgZG9cblx0XHRcdFx0cGlubmVkLmZsYWdzLmRlY3IoJ0Btb3ZlJykgaWYgcGlubmVkXG5cdFx0XHRcdGVsZW1lbnQuZmxhZ3MuZGVjcignQG1vdmUnKVxuXHRcdFx0cmV0dXJuIHRydWVcblx0XHRcdFxuXHRcdGVsaWYgby54ID4gdGggb3Igby55ID4gdGhcblx0XHRcdG8uY2FuY2VsbGVkID0geWVzXG5cdFx0XHQjICNjYW5jZWwhXG5cdFx0XHRyZXR1cm4gbm9cblx0XHRcdFxuXHRcdHJldHVybiBub1xuXHRcblx0ZGVmIEBob2xkIHRpbWUgPSAyNTBcblx0XHRsZXQgbyA9ICNzdGVwXG5cdFx0bGV0IGVsID0gI2NvbnRleHQuZWxlbWVudFxuXHRcdFxuXHRcdHJldHVybiBubyBpZiBvLmNhbmNlbGxlZFxuXHRcdFxuXHRcdGlmIG8uc2V0dXAgYW5kICFvLmFjdGl2ZVxuXHRcdFx0bGV0IHggPSBjbGllbnRYXG5cdFx0XHRsZXQgeSA9IGNsaWVudFlcblx0XHRcdFxuXHRcdFx0bGV0IGR4ID0geCAtIG8ueFxuXHRcdFx0bGV0IGR5ID0geSAtIG8ueVxuXHRcdFx0bGV0IGRyID0gTWF0aC5zcXJ0KGR4KmR4ICsgZHkqZHkpXG5cdFx0XHQjIGNhbmNlbFxuXHRcdFx0aWYgZHIgPiA1IGFuZCAhby5jYW5jZWxsZWRcblx0XHRcdFx0Y2xlYXJUaW1lb3V0KG8udGltZW91dClcblx0XHRcdFx0by5jYW5jZWxsZWQgPSB5ZXNcblx0XHRcdFx0IyAjY2FuY2VsIVxuXHRcdFx0XG5cdFx0aWYgby5zZXR1cCA9PyB5ZXNcblx0XHRcdG8uYWN0aXZlID0gbm9cblx0XHRcdG8ueCA9IGNsaWVudFhcblx0XHRcdG8ueSA9IGNsaWVudFlcblxuXHRcdFx0bGV0IHJlc29sdmVcblxuXHRcdFx0by50aW1lb3V0ID0gc2V0VGltZW91dCgmLHRpbWUpIGRvXG5cdFx0XHRcdG8uYWN0aXZlID0geWVzXG5cdFx0XHRcdHByZXZlbnREZWZhdWx0IVxuXHRcdFx0XHRlbC5mbGFncy5pbmNyKFwiQGhvbGRcIilcblx0XHRcdFx0cmVzb2x2ZSh5ZXMpIGlmIHJlc29sdmVcblx0XHRcdFx0cmVzb2x2ZSA9IG51bGxcblx0XHRcdFxuXHRcdFx0b25jZShzZWxmLCdlbmQnKSBkb1xuXHRcdFx0XHRpZiBvLmFjdGl2ZVxuXHRcdFx0XHRcdGVsLmZsYWdzLmRlY3IoXCJAaG9sZFwiKVxuXHRcdFx0XHRjbGVhclRpbWVvdXQoby50aW1lb3V0KVxuXHRcdFx0XHRyZXNvbHZlKG5vKSBpZiByZXNvbHZlXG5cdFx0XHRcdHJlc29sdmUgPSBudWxsXG5cdFx0XHRcblx0XHRcdHJldHVybiBuZXcgUHJvbWlzZSBkbyByZXNvbHZlID0gJDFcblxuXHRcdHJldHVybiBvLmFjdGl2ZVxuXHRcdFxuXHRkZWYgQHN5bmMgaXRlbSx4YWxpYXM9J3gnLHlhbGlhcz0neSdcblx0XHRsZXQgbyA9ICNzdGVwXG5cblx0XHRpZiBvLnNldHVwID0/IHllc1xuXHRcdFx0by54ID0gaXRlbVt4YWxpYXNdIG9yIDBcblx0XHRcdG8ueSA9IGl0ZW1beWFsaWFzXSBvciAwXG5cdFx0XHRvLnR4ID0geFxuXHRcdFx0by50eSA9IHlcblx0XHRlbHNlXG5cdFx0XHRpdGVtW3hhbGlhc10gPSBvLnggKyAoeCAtIG8udHgpIGlmIHhhbGlhc1xuXHRcdFx0aXRlbVt5YWxpYXNdID0gby55ICsgKHkgLSBvLnR5KSBpZiB5YWxpYXNcblx0XHRcdFxuXHRcdCNjb250ZXh0LmNvbW1pdCA9IHllc1xuXHRcdHJldHVybiB5ZXNcblx0XHRcblx0ZGVmIEBhcHBseSBpdGVtLHhhbGlhcz0neCcseWFsaWFzPSd5J1xuXHRcdGl0ZW1beGFsaWFzXSA9IHggaWYgeGFsaWFzXG5cdFx0aXRlbVt5YWxpYXNdID0geSBpZiB5YWxpYXNcblx0XHQjY29udGV4dC5jb21taXQgPSB5ZXNcblx0XHRyZXR1cm4geWVzXG5cdFx0XG5cdGRlZiBAY3NzIHhhbGlhcz0neCcseWFsaWFzPSd5J1xuXHRcdFxuXHRcdGxldCBvID0gI3N0ZXBcblx0XHRpZiBvLnNldHVwID0/IHllc1xuXHRcdFx0by5lbCA9ICNjb250ZXh0LmVsZW1lbnRcblx0XHRcdG8ueCA9IG8uZWwuI3ggb3IgMFxuXHRcdFx0by55ID0gby5lbC4jeSBvciAwXG5cdFx0XHRvLnR4ID0geFxuXHRcdFx0by50eSA9IHlcblx0XHRlbHNlXG5cdFx0XHRsZXQgeCA9IG8uZWwuI3ggPSBvLnggKyAoeCAtIG8udHgpXG5cdFx0XHRsZXQgeSA9IG8uZWwuI3kgPSBvLnkgKyAoeSAtIG8udHkpXG5cblx0XHRcdG8uZWwuc3R5bGUuc2V0UHJvcGVydHkoXCItLXhcIix4ICsgJ3B4JykgaWYgeGFsaWFzXG5cdFx0XHRvLmVsLnN0eWxlLnNldFByb3BlcnR5KFwiLS15XCIseSArICdweCcpIGlmIHlhbGlhc1x0XHRcdFxuXHRcdHJldHVybiB5ZXNcblx0XHRcdFxuXHRkZWYgQGVuZFxuXHRcdHJldHVybiBwaGFzZSA9PSAnZW5kZWQnXG5cdFx0XG5cdGRlZiBAc2hpZnRcblx0XHRyZXR1cm4gISFzaGlmdEtleVxuXG5cdGRlZiBAYWx0XG5cdFx0cmV0dXJuICEhYWx0S2V5XG5cblx0ZGVmIEBjdHJsXG5cdFx0cmV0dXJuICEhY3RybEtleVxuXG5cdGRlZiBAbWV0YVxuXHRcdHJldHVybiAhIW1ldGFLZXlcblx0XHRcblx0ZGVmIEBwcmltYXJ5XG5cdFx0cmV0dXJuICEhaXNQcmltYXJ5XG5cdFxuXHRkZWYgQG1vdXNlXG5cdFx0cmV0dXJuIHBvaW50ZXJUeXBlID09ICdtb3VzZSdcblx0XG5cdGRlZiBAcGVuXG5cdFx0cmV0dXJuIHBvaW50ZXJUeXBlID09ICdwZW4nXG5cdFxuXHRkZWYgQHRvdWNoXG5cdFx0cmV0dXJuIHBvaW50ZXJUeXBlID09ICd0b3VjaCdcblx0XG5cdGRlZiBAcHJlc3N1cmUgdGhyZXNob2xkID0gMC41XG5cdFx0cmV0dXJuIHByZXNzdXJlID49IHRocmVzaG9sZFxuXHRcdFxuXHRkZWYgQGxvZyAuLi5wYXJhbXNcblx0XHRjb25zb2xlLmluZm8oLi4ucGFyYW1zKVxuXHRcdHJldHVybiB0cnVlXG5cdFx0XG5cdGRlZiBAbGVmdCBkbyBvcmlnaW5hbEV2ZW50LmJ1dHRvbiA9PSAwXG5cblx0ZGVmIEBtaWRkbGUgZG8gb3JpZ2luYWxFdmVudC5idXR0b24gPT0gMVxuXG5cdGRlZiBAcmlnaHQgZG8gb3JpZ2luYWxFdmVudC5idXR0b24gPT0gMlxuXHRcdFxuXHRkZWYgQHJvdW5kIHN4PTEsc3k9c3ggXG5cdFx0eCA9IGhlbHBlcnMucm91bmQoeCxzeClcblx0XHR5ID0gaGVscGVycy5yb3VuZCh5LHN5KVxuXHRcdHJldHVybiB5ZXNcblx0XHRcblx0ZGVmICNyZWZyYW1lIC4uLnBhcmFtc1xuXHRcdGxldCBvID0gI3N0ZXBcblx0XHRcblx0XHRpZiBvLnNldHVwID0/IHllc1xuXHRcdFx0bGV0IGVsID0gdGFyZ2V0XG5cdFx0XHRsZXQgbGVuID0gcGFyYW1zLmxlbmd0aFxuXHRcdFx0bGV0IGJveCA9IHBhcmFtc1swXVxuXHRcdFx0bGV0IG1pbiA9IDBcblx0XHRcdGxldCBtYXggPSAxMDAlXG5cdFx0XHRsZXQgc25hcCA9IDBcblx0XHRcdGxldCB0eXAgPSB0eXBlb2YgYm94XG5cdFx0XHRcblx0XHRcdGlmIHR5cCA9PSAnbnVtYmVyJyBvciAodHlwID09ICdzdHJpbmcnIGFuZCAoL14oWy0rXT9cXGRbXFxkXFwuXSopKCV8XFx3KykkLykudGVzdChib3gpKSBvciBib3ggaXNhIEFycmF5XG5cdFx0XHRcdGJveCA9IG51bGxcblxuXHRcdFx0ZWxpZiB0eXAgPT0gJ3N0cmluZydcblx0XHRcdFx0aWYgYm94ID09ICd0aGlzJyBvciBib3ggPT0gJydcblx0XHRcdFx0XHRib3ggPSBlbFxuXHRcdFx0XHRlbGlmIGJveCA9PSAndXAnXG5cdFx0XHRcdFx0Ym94ID0gZWwucGFyZW50Tm9kZVxuXHRcdFx0XHRlbGlmIGJveCA9PSAnb3AnXG5cdFx0XHRcdFx0Ym94ID0gZWwub2Zmc2V0UGFyZW50XG5cdFx0XHRcdGVsc2Vcblx0XHRcdFx0XHRib3ggPSBlbC5jbG9zZXN0KGJveCkgb3IgZWwucXVlcnlTZWxlY3Rvcihib3gpXG5cblx0XHRcdGlmIGJveCA9PSBudWxsXG5cdFx0XHRcdGxlbisrXG5cdFx0XHRcdHBhcmFtcy51bnNoaWZ0KGJveCA9IGVsKVxuXHRcdFx0XG5cdFx0XHRpZiBsZW4gPT0gMlxuXHRcdFx0XHRzbmFwID0gcGFyYW1zWzFdXG5cdFx0XHRlbGlmIGxlbiA+IDJcblx0XHRcdFx0W21pbixtYXgsc25hcD0wXSA9IHBhcmFtcy5zbGljZSgxKVxuXG5cdFx0XHRsZXQgcmVjdCA9IGJveC5nZXRCb3VuZGluZ0NsaWVudFJlY3QhXG5cdFx0XHRtaW4gPSBbbWluLG1pbl0gdW5sZXNzIG1pbiBpc2EgQXJyYXlcblx0XHRcdG1heCA9IFttYXgsbWF4XSB1bmxlc3MgbWF4IGlzYSBBcnJheVxuXHRcdFx0c25hcCA9IFtzbmFwLHNuYXBdIHVubGVzcyBzbmFwIGlzYSBBcnJheVxuXG5cdFx0XHRvLnJlY3QgPSByZWN0XG5cdFx0XHRvLnggPSBoZWxwZXJzLmNyZWF0ZVNjYWxlKHJlY3QubGVmdCxyZWN0LnJpZ2h0LG1pblswXSxtYXhbMF0sc25hcFswXSlcblx0XHRcdG8ueSA9IGhlbHBlcnMuY3JlYXRlU2NhbGUocmVjdC50b3AscmVjdC5ib3R0b20sbWluWzFdLG1heFsxXSxzbmFwWzFdKVxuXHRcdFx0eDAgPSB4ID0gby54KHgsby5jbGFtcClcblx0XHRcdHkwID0geSA9IG8ueSh5LG8uY2xhbXApXG5cdFx0ZWxzZVxuXHRcdFx0bGV0IHggPSB4ID0gby54KHgsby5jbGFtcClcblx0XHRcdGxldCB5ID0geSA9IG8ueSh5LG8uY2xhbXApXG5cdFx0XHQjZHggPSB4IC0geDBcblx0XHRcdCNkeSA9IHkgLSB5MFxuXG5cdFx0cmV0dXJuIHllc1xuXHRcblx0ZGVmIEBmaXQgLi4ucGFyYW1zXG5cdFx0I3N0ZXAuY2xhbXAgPSB5ZXNcblx0XHQjcmVmcmFtZSguLi5wYXJhbXMpXG5cdFxuXHRkZWYgQHJlZnJhbWUgLi4ucGFyYW1zXG5cdFx0I3JlZnJhbWUoLi4ucGFyYW1zKVxuXHRcblx0IyMjXG5cdEFsbG93IHBpbm5pbmcgdGhlIHRvdWNoIHRvIGEgY2VydGFpbiBwb2ludCBpbiBhbiBlbGVtZW50LCBzbyB0aGF0XG5cdGFsbCBmdXR1cmUgeCx5IHZhbHVlcyBhcmUgcmVsYXRpdmUgdG8gdGhpcyBwaW5uZWQgcG9pbnQuXG5cdFlvdSBjYW4gaW5jbHVkZSByZWxhdGl2ZSBhbmNob3JzIGZvciB4IGFuZCB5XG5cblx0TWFrZSB4LHkgcmVsYXRpdmUgdG8gdGhlIGNlbnRlciBvZiB0aGUgcGFyZW50OlxuXHRcdDxib3gudGFyZ2V0PiA8ZGl2LmhhbmRsZSBAdG91Y2gucGluKCcudGFyZ2V0JywwLjUsMC41KT5cblxuXHQodGFyZ2V0RWxlbWVudCxhbmNob3JYPywgYW5jaG9yWT8pXG5cdCMjI1xuXHRkZWYgQHBpbiAuLi5wYXJhbXNcblx0XHRsZXQgbyA9ICNzdGVwXG5cdFx0XG5cdFx0IyBUT0RPIHdhcm4gaWYgcGluIGNvbWVzIGFmdGVyIHJlZnJhbWVcblxuXHRcdGlmIG8uc2V0dXAgPT8geWVzXG5cdFx0XHRsZXQgYm94ID0gaGVscGVycy50b0VsZW1lbnQocGFyYW1zWzBdLHRhcmdldClcblxuXHRcdFx0dW5sZXNzIGJveCBpc2EgRWxlbWVudFxuXHRcdFx0XHRwYXJhbXMudW5zaGlmdChib3ggPSB0YXJnZXQpXG5cdFx0XHRcblx0XHRcdGxldCBheCA9IHBhcmFtc1sxXSBvciAwXG5cdFx0XHRsZXQgYXkgPSBwYXJhbXNbMl0gPz89IGF4XG5cdFx0XHRsZXQgcmVjdCA9IGJveC5nZXRCb3VuZGluZ0NsaWVudFJlY3QhXG5cdFx0XHRcblx0XHRcdG8ueCA9IGNsaWVudFggLSAocmVjdC5sZWZ0ICsgcmVjdC53aWR0aCAqIGF4KVxuXHRcdFx0by55ID0gY2xpZW50WSAtIChyZWN0LnRvcCArIHJlY3QuaGVpZ2h0ICogYXkpXG5cblx0XHRcdGlmIGJveFxuXHRcdFx0XHQjcGluVGFyZ2V0ID0gYm94XG5cdFx0XHRcdGJveC5mbGFncy5pbmNyKCdfdG91Y2hfJylcblx0XHRcdFx0b25jZShzZWxmLCdlbmQnKSBkbyBib3guZmxhZ3MuZGVjcignX3RvdWNoXycpXG5cdFx0XHQjIGNvbnNvbGUubG9nICdwaW5uaW5nJyxvLGJveFxuXHRcdFxuXHRcdHggLT0gby54XG5cdFx0eSAtPSBvLnlcblx0XHRyZXR1cm4geWVzXG5cbmV4dGVuZCBjbGFzcyBFbGVtZW50XG5cdGRlZiBvbiR0b3VjaChtb2RzLGNvbnRleHQsaGFuZGxlcixvKVxuXHRcdGhhbmRsZXIudHlwZSA9ICd0b3VjaCdcblx0XHRzZWxmLmFkZEV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJkb3duJyxoYW5kbGVyLHtwYXNzaXZlOiBmYWxzZX0pXG5cdFx0aWYgaGVscGVycy5uYXZpZ2F0b3IuaW9zPyBhbmQgZ2xvYmFsLnBhcmVudCAhPSBnbG9iYWxcblx0XHRcdGlmIGlvc01vdmVJZnJhbWVGaXggPT8gdHJ1ZVxuXHRcdFx0XHRnbG9iYWwucGFyZW50LnBvc3RNZXNzYWdlKCdzZXR1cFRvdWNoRml4JylcblxuXHRcdHJldHVybiBoYW5kbGVyXG5cdFx0XG5pZiAkd2ViJCBhbmQgZ2xvYmFsLnBhcmVudCA9PSBnbG9iYWwgYW5kIGhlbHBlcnMubmF2aWdhdG9yLmlvcz9cblx0bGV0IGZpeCA9IGRvKGUpXG5cdFx0aWYgZS5kYXRhID09ICdzZXR1cFRvdWNoRml4J1xuXHRcdFx0Z2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIoJ3RvdWNobW92ZScsJix7cGFzc2l2ZTogZmFsc2V9KSBkbyBmYWxzZVxuXHRcdFx0Z2xvYmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLGZpeClcblx0Z2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIoJ21lc3NhZ2UnLGZpeClcblx0XHRcbmRlZiBFdmVudC50b3VjaCRoYW5kbGVcblx0bGV0IGUgPSBldmVudFxuXHRsZXQgZWwgPSBlbGVtZW50XG5cdGxldCBpZCA9IHN0YXRlLnBvaW50ZXJJZFxuXHRsZXQgbSA9IG1vZGlmaWVyc1xuXHRsZXQgaGFuZGxlciA9IHNlbGYuaGFuZGxlclxuXHRsZXQgaW9zID0gaGVscGVycy5uYXZpZ2F0b3IuaW9zP1xuXG5cdGN1cnJlbnQgPSBzdGF0ZVxuXG5cdGlmIGlkICE9IHVuZGVmaW5lZFxuXHRcdHJldHVybiBpZCA9PSBlLnBvaW50ZXJJZFxuXHRcdFxuXHRcblx0IyByZWplY3QgdGhlIHRvdWNoIGJlZm9yZSBjcmVhdGlvbiBmb3IgY2VydGFpbiBtb2RpZmllcnNcblx0IyBUT0RPIHNob3VsZCBhbGxvdyBzcGVjaWZ5aW5nIHBlbiBPUiBtb3VzZSBldGNcblx0IyBGSVhNRSB0aGVzZSB3aWxsIG5vdCB3b3JrIHdpdGggbmVnYXRlZCBtb2RpZmllcnNcblx0cmV0dXJuIGlmIG0uY3RybCBhbmQgIWUuY3RybEtleVxuXHRyZXR1cm4gaWYgbS5hbHQgYW5kICFlLmFsdEtleVxuXHRyZXR1cm4gaWYgbS5tZXRhIGFuZCAhZS5tZXRhS2V5XG5cdHJldHVybiBpZiBtLnNoaWZ0IGFuZCAhZS5zaGlmdEtleVxuXHRyZXR1cm4gaWYgbS5pZiBhbmQgISFtLmlmWzBdID09IGZhbHNlXG5cdHJldHVybiBpZiBtLnNlbGYgYW5kIGUudGFyZ2V0ICE9IGVsXG5cdHJldHVybiBpZiBtLnByaW1hcnkgYW5kICFlLmlzUHJpbWFyeVxuXHRyZXR1cm4gaWYgbS5wZW4gYW5kIGUucG9pbnRlclR5cGUgIT0gJ3Blbidcblx0cmV0dXJuIGlmIG0ubW91c2UgYW5kIGUucG9pbnRlclR5cGUgIT0gJ21vdXNlJ1xuXHRyZXR1cm4gaWYgbS50b3VjaCBhbmQgZS5wb2ludGVyVHlwZSAhPSAndG91Y2gnXG5cdHJldHVybiBpZiBtLnNlbCBhbmQgIWUudGFyZ2V0Lm1hdGNoZXMoU3RyaW5nKG0uc2VsWzBdKSlcblx0XG5cdGxldCB0ID0gc3RhdGUgPSBoYW5kbGVyLnN0YXRlID0gY3VycmVudCA9IG5ldyBUb3VjaChlLGhhbmRsZXIsZWwpXG5cdGlkID0gdC5wb2ludGVySWRcblxuXHRsZXQgY2FuY2VsbGVyID0gZG8oZSlcblx0XHRlLnByZXZlbnREZWZhdWx0IVxuXHRcdHJldHVybiBmYWxzZVxuXG5cdGxldCB0ZWFyZG93biA9IG51bGxcblx0bGV0IHN5bSA9IFN5bWJvbCFcblx0XG5cdGxldCBvbmNsaWNrID0gZG8oZSlcblx0XHQjIGNvbnNvbGUuZGVidWcgXCJPTkNMSUNLIVwiLGUsZS5wb2ludGVySWQsdC5jbGllbnRYLHQuY2xpZW50WSxlLmNsaWVudFgsZS5jbGllbnRZXG5cdFx0bGV0IHR4ID0gdC5jbGllbnRYXG5cdFx0bGV0IHR5ID0gdC5jbGllbnRZXG5cdFx0bGV0IGV4ID0gZS5jbGllbnRYXG5cdFx0bGV0IGV5ID0gZS5jbGllbnRZXG5cblx0XHRpZiAodC4jbG9ja2VkIG9yIHQuZGVmYXVsdFByZXZlbnRlZCkgYW5kICgoZS5wb2ludGVySWQgPT0gdC5wb2ludGVySWQpIG9yICh0eCA9PSBleCBhbmQgdHkgPT0gZXkpKVxuXHRcdFx0ZS5wcmV2ZW50RGVmYXVsdCFcblx0XHRcdGUuc3RvcFByb3BhZ2F0aW9uIVxuXHRcdFx0XG5cdFx0aWYgb25jbGlja1xuXHRcdFx0Z2xvYmFsLnJlbW92ZUV2ZW50TGlzdGVuZXIoJ2NsaWNrJyxvbmNsaWNrLGNhcHR1cmU6dHJ1ZSlcblx0XHRcdG9uY2xpY2sgPSBudWxsXG5cdFx0cmV0dXJuXG5cdFx0XG5cdGxldCBvbnRvdWNoID0gZG8oZSlcblx0XHRpZiB0LnR5cGUgPT0gJ3RvdWNobW92ZScgYW5kIGUuY2hhbmdlZFRvdWNoZXNbMF0uaWRlbnRpZmllciAhPSBpZFxuXHRcdFx0cmV0dXJuIFx0XG5cdFx0IyBjb25zb2xlLmRlYnVnICdvbnRvdWNoJyxlLnR5cGUsdC5kZWZhdWx0UHJldmVudGVkLGUuY2hhbmdlZFRvdWNoZXNcblx0XHRpZiB0LmRlZmF1bHRQcmV2ZW50ZWQgb3IgdC4jbG9ja2VkXG5cdFx0XHRlLnByZXZlbnREZWZhdWx0IVxuXHRcdFxuXHRsZXQgbGlzdGVuZXIgPSBkbyhlKVxuXHRcdGxldCB0eXAgPSBlLnR5cGVcblx0XHRsZXQgcGggPSB0LnBoYXNlXG5cdFx0IyBjb25zb2xlLmRlYnVnIFwibGlzdGVuXCIsZS50eXBlLGUucG9pbnRlcklkXG5cdFx0cmV0dXJuIGlmIGUucG9pbnRlcklkIGFuZCB0LnBvaW50ZXJJZCAhPSBlLnBvaW50ZXJJZFxuXHRcdFxuXHRcdGlmIGVbc3ltXVxuXHRcdFx0cmV0dXJuXG5cblx0XHRlW3N5bV0gPSB5ZXNcblx0XHRcblx0XHRcblx0XHRsZXQgZW5kID0gdHlwID09ICdwb2ludGVydXAnIG9yIHR5cCA9PSAncG9pbnRlcmNhbmNlbCdcblx0XHRcblx0XHQjIGlmIHRoZSBwcmVzc3VyZSBpcyBzdWRkZW5seSAwIGl0IGluZGljYXRlcyB0aGVyZSBoYXMgYmVlbiBhXG5cdFx0IyBwb2ludGVydXAgZXZlbnQgbm90IGNhcHR1cmVkIGJ5IHRoZSBicm93c2VyXG5cdFx0aWYgZS5wcmVzc3VyZSA9PSAwIGFuZCBlLnBvaW50ZXJUeXBlID09ICdtb3VzZScgYW5kIHR5cCA9PSAncG9pbnRlcm1vdmUnIGFuZCB0Lm9yaWdpbmFsRXZlbnQucHJlc3N1cmUgPiAwXG5cdFx0XHRyZXR1cm4gdGVhcmRvd24oZSlcblx0XHRcblx0XHRpZiB0eXAgPT0gJ3BvaW50ZXJjYW5jZWwnXG5cdFx0XHR0LnggPSB0LmNsaWVudFhcblx0XHRcdHQueSA9IHQuY2xpZW50WVxuXHRcdGVsc2Vcblx0XHRcdHQueCA9IGUuY2xpZW50WFxuXHRcdFx0dC55ID0gZS5jbGllbnRZXG5cdFx0XHRcblx0XHR0LmV2ZW50ID0gZVxuXG5cdFx0aWYgZW5kXG5cdFx0XHR0LnBoYXNlID0gJ2VuZGVkJ1xuXHRcdFx0XG5cdFx0dHJ5IGhhbmRsZXIuaGFuZGxlRXZlbnQodClcblx0XHRcblx0XHRpZiBwaCA9PSAnaW5pdCcgYW5kICFlbmRcblx0XHRcdHQucGhhc2UgPSAnYWN0aXZlJ1xuXHRcdFx0XG5cdFx0aWYgZW5kIGFuZCB0ZWFyZG93blxuXHRcdFx0dGVhcmRvd24oZSlcblx0XG5cdGxldCBkaXNwb3NlZCA9IG5vXG5cblx0dGVhcmRvd24gPSBkbyhlKVxuXHRcdHJldHVybiBpZiBkaXNwb3NlZFxuXHRcdGRpc3Bvc2VkID0geWVzXG5cdFx0ZWwuZmxhZ3MuZGVjcignX3RvdWNoXycpXG5cblx0XHRpZiB0LnBoYXNlICE9ICdlbmRlZCdcblx0XHRcdHQucGhhc2UgPSAnZW5kZWQnXG5cdFx0XHR0LnggPSB0LmNsaWVudFhcblx0XHRcdHQueSA9IHQuY2xpZW50WVxuXHRcdFx0aGFuZGxlci5oYW5kbGVFdmVudCh0KVxuXG5cdFx0dC5lbWl0KCdlbmQnKVxuXHRcdFxuXHRcdHVubGVzcyBtLnBhc3NpdmVcblx0XHRcdGlmICgtLWhhbmRsZXIucHJldmVudHMpID09IDBcblx0XHRcdFx0ZWwuc3R5bGUucmVtb3ZlUHJvcGVydHkoJ3RvdWNoLWFjdGlvbicpXG5cblx0XHRoYW5kbGVyLnN0YXRlID0ge31cblxuXHRcdGdsb2JhbC5yZW1vdmVFdmVudExpc3RlbmVyKCdwb2ludGVybW92ZScsbGlzdGVuZXIscGFzc2l2ZTohIW0ucGFzc2l2ZSlcblx0XHRnbG9iYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcigncG9pbnRlcnVwJyxsaXN0ZW5lcilcblx0XHRnbG9iYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcigncG9pbnRlcmNhbmNlbCcsbGlzdGVuZXIpXG5cblx0XHRzZXRUaW1lb3V0KCYsMTAwKSBkb1xuXHRcdFx0aWYgb25jbGlja1xuXHRcdFx0XHRnbG9iYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcignY2xpY2snLG9uY2xpY2ssY2FwdHVyZTp0cnVlKVxuXHRcdFx0XHRvbmNsaWNrID0gbnVsbFxuXHRcdFx0XHRcblx0XHRcdGlmIGlvcyBhbmQgb250b3VjaFxuXHRcdFx0XHRnbG9iYWwucmVtb3ZlRXZlbnRMaXN0ZW5lcigndG91Y2hlbmQnLG9udG91Y2gpXG5cdFx0XHRcdGdsb2JhbC5yZW1vdmVFdmVudExpc3RlbmVyKCd0b3VjaG1vdmUnLG9udG91Y2gse3Bhc3NpdmU6IGZhbHNlfSlcblx0XHRcdFx0b250b3VjaCA9IG51bGxcblxuXHRcdGlmICFtLnBhc3NpdmVcblx0XHRcdGdsb2JhbC5kb2N1bWVudC5yZW1vdmVFdmVudExpc3RlbmVyKCdzZWxlY3RzdGFydCcsY2FuY2VsbGVyLGNhcHR1cmU6dHJ1ZSlcblx0XHRcblx0dC4jdGVhcmRvd24gPSB0ZWFyZG93blxuXHRcblx0aWYgIW0ucGFzc2l2ZVxuXHRcdGhhbmRsZXIucHJldmVudHMgfHw9IDBcblx0XHRoYW5kbGVyLnByZXZlbnRzKytcblx0XHRlbC5zdHlsZS5zZXRQcm9wZXJ0eSgndG91Y2gtYWN0aW9uJywnbm9uZScpXG5cdFx0ZWwub2Zmc2V0V2lkdGhcblxuXHRlbC5mbGFncy5pbmNyKCdfdG91Y2hfJylcblx0Z2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJtb3ZlJyxsaXN0ZW5lcixwYXNzaXZlOiEhbS5wYXNzaXZlKVxuXHRnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lcigncG9pbnRlcnVwJyxsaXN0ZW5lcilcblx0Z2xvYmFsLmFkZEV2ZW50TGlzdGVuZXIoJ3BvaW50ZXJjYW5jZWwnLGxpc3RlbmVyKVxuXHRnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lcignY2xpY2snLG9uY2xpY2ssY2FwdHVyZTp0cnVlKVxuXG5cdGlmIGlvcyBhbmQgIW0ucGFzc2l2ZVxuXHRcdGdsb2JhbC5hZGRFdmVudExpc3RlbmVyKCd0b3VjaGVuZCcsb250b3VjaClcblx0XHRnbG9iYWwuYWRkRXZlbnRMaXN0ZW5lcigndG91Y2htb3ZlJyxvbnRvdWNoLHtwYXNzaXZlOiBmYWxzZX0pXG5cblx0aWYgIW0ucGFzc2l2ZVxuXHRcdGdsb2JhbC5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKCdzZWxlY3RzdGFydCcsY2FuY2VsbGVyLGNhcHR1cmU6dHJ1ZSlcblxuXHRsaXN0ZW5lcihlKVxuXHRyZXR1cm4gZmFsc2UiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUVBLE1BQU0sRUFBRSxLQUFLLENBQUMsT0FBTyxPQUFPLGFBQWE7QUFDekMsTUFBTSxFQUFFLE1BQU0sQ0FBQyxJQUFJLENBQUMsSUFBSSxDQUFDLFFBQVEsT0FBTyxVQUFVOztBQUVsRCxNQUFNLENBQUMsQ0FBQyxJQUFJLE9BQU8sTUFBTSxXQUFXOztBQUVwQyxNQUFNLENBQUMsUUFBRyxDQUFDLGdCQUFnQixFQUFBOztDQUMxQixPQUFBLElBQUc7O0NBQUE7QUFFQSxJQUFBLGdCQUFnQixHQUFHLElBQUk7O0FBRTNCLEtBQUssQ0FBQyxLQUFLLEVBQUE7O0NBQ04sV0FBVyxDQUFDLENBQUMsQ0FBQyxPQUFPLENBQUMsRUFBRSxDQUFBOztFQUMzQixLQUFBLEtBQUssR0FBRyxNQUFNO0VBQ2QsS0FBQSxNQUFNLEdBQUcsRUFBRTtFQUNYLEtBQUEsYUFBYSxHQUFHLENBQUM7T0FDakIsT0FBTyxHQUFHLE9BQU87RUFDakIsS0FBQSxNQUFNLEdBQUcsS0FBQSxhQUFhLEdBQUcsRUFBRTtjQUN0QixHQUFHLEVBQUU7RUFBQTs7Q0FFWCxHQUFHLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQTs7RUFDZCxLQUFBLE1BQU0sQ0FBQyxJQUFJLENBQUMsS0FBSyxDQUFDO0VBQUE7O0NBRW5CLEdBQUcsQ0FBQyxPQUFPO0VBQUksT0FBQSxLQUFBLGFBQWEsQ0FBQyxPQUFPO0VBeEJyQztDQXlCQyxHQUFHLENBQUMsTUFBTTtFQUFJLE9BQUEsS0FBQSxhQUFhLENBQUMsTUFBTTtFQXpCbkM7Q0EwQkMsR0FBRyxDQUFDLFFBQVE7RUFBSSxPQUFBLEtBQUEsYUFBYSxDQUFDLFFBQVE7RUExQnZDO0NBMkJDLEdBQUcsQ0FBQyxPQUFPO0VBQUksT0FBQSxLQUFBLGFBQWEsQ0FBQyxPQUFPO0VBM0JyQztDQTRCQyxHQUFHLENBQUMs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RyxDQUFDLENBQUMsQ0FBQSxDQUFFLEdBQUcsQ0FBQyxDQUFDLENBQUEsQ0FBRSxJQUFJLENBQUMsQ0FBQyxDQUFBLENBQUU7R0FDckUsQ0FBQyxDQUFDLENBQUMsR0FBRyxPQUFPLENBQUMsV0FBVyxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUMsSUFBSSxDQUFDLE1BQU0sQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFBLENBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQSxDQUFFLElBQUksQ0FBQyxDQUFDLENBQUEsQ0FBRTtHQUNyRSxLQUFBLEVBQUUsR0FBRyxLQUFBLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUEsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUM7R0FDdkIsS0FBQSxFQUFFLEdBQUcsS0FBQSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0dBQUEsTUFDcEI7O0dBQ0MsSUFBQSxDQUFDLEdBQUcsS0FBQSxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsQ0FBQyxLQUFBLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDO0dBQ3RCLElBQUEsQ0FBQyxHQUFHLEtBQUEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBQSxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQzthQUN2QixHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsS0FBQSxFQUFFO2FBQ1QsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLEtBQUEsRUFBRTtHQUFBOztFQUViLE1BQU0sQ0FBQyxJQUFHO0VBQUE7O0NBRVAsSUFBSSxJQUFJLE1BQU0sQ0FBQTs7Y0FDWixDQUFDLEtBQUssR0FBRyxJQUFHO3dCQUNULENBQUksR0FBQSxNQUFNLENBQUM7RUFBQTs7Q0FFaEIsUUFBUSxJQUFJLE1BQU0sQ0FBQTs7d0JBQ2IsQ0FBSSxHQUFBLE1BQU0sQ0FBQztFQUFBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0NBWWhCLElBQUksSUFB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","css":""}