{"id":"c","warnings":[],"errors":[],"js":"function iter$__(a){ let v; return a ? ((v=a.toIterable) ? v.call(a) : a) : a; };;\nfunction defineName$__(cls,name){\n\tObject.defineProperty(cls,\"name\",{value:name,configurable:true});\n};;\nfunction inheritClass$__(cls){\n\tObject.getPrototypeOf(cls.prototype).constructor?.inherited?.(cls);\n};\nconst $setup$ = Symbol.for('#setup'), $setupΦ$ = Symbol.for('#setup?'), $dom$ = Symbol.for('#dom'), $server$ = Symbol.for('#server');\n\n/*body*/\n// imba$stdlib=1\nimport cluster from 'cluster';\nimport nfs from 'fs';\nimport np from 'path';\nimport {EventEmitter} from 'events';\n\nimport http from 'http';\nimport https from 'https';\n\n// TODO share mimeType list with bundler to\n// bundle supported file extensions\nconst defaultHeaders = {\n\thtml: {'Content-Type': 'text/html; charset=utf-8'},\n\tjs: {'Content-Type': 'text/javascript; charset=utf-8'},\n\tcjs: {'Content-Type': 'text/javascript; charset=utf-8'},\n\tmjs: {'Content-Type': 'text/javascript; charset=utf-8'},\n\tjson: {'Content-Type': 'application/json; charset=utf-8'},\n\tcss: {'Content-Type': 'text/css; charset=utf-8'},\n\tmap: {'Content-Type': 'application/json; charset=utf-8'},\n\t\n\totf: {'Content-Type': 'font/otf'},\n\tttf: {'Content-Type': 'font/ttf'},\n\twoff: {'Content-Type': 'font/woff'},\n\twoff2: {'Content-Type': 'font/woff2'},\n\t\n\tsvg: {'Content-Type': 'image/svg+xml'},\n\tavif: {'Content-Type': 'image/avif'},\n\tgif: {'Content-Type': 'image/gif'},\n\tpng: {'Content-Type': 'image/png'},\n\tapng: {'Content-Type': 'image/apng'},\n\twebp: {'Content-Type': 'image/webp'},\n\tjpg: {'Content-Type': 'image/jpeg'},\n\tjpeg: {'Content-Type': 'image/jpeg'},\n\tico: {'Content-Type': 'image/x-icon'},\n\tbmp: {'Content-Type': 'image/bmp'},\n\tpdf: {'Content-Type': 'application/pdf'},\n\t\n\twebm: {'Content-Type': 'video/webm'},\n\tweba: {'Content-Type': 'audio/webm'},\n\tavi: {'Content-Type': 'video/x-msvideo'},\n\tmp3: {'Content-Type': 'audio/mpeg'},\n\tmp4: {'Content-Type': 'video/mp4'},\n\tm4a: {'Content-Type': 'audio/m4a'},\n\tmov: {'Content-Type': 'video/quicktime'},\n\twmv: {'Content-Type': 'video/x-ms-wmv'},\n\tmpeg: {'Content-Type': 'video/mpeg'},\n\twav: {'Content-Type': 'audio/wav'},\n\togg: {'Content-Type': 'audio/ogg'},\n\togv: {'Content-Type': 'video/ogg'},\n\toga: {'Content-Type': 'audio/ogg'},\n\topus: {'Content-Type': 'audio/opus'}\n\n};\n\nconst proc = globalThis.process;\n\nclass Servers extends Set {\n\t\n\t\n\tcall(name,...params){\n\t\tvar $1;\n\t\t\n\t\t$1 = [];\n\t\tfor (let server of iter$__(this)){\n\t\t\t\n\t\t\t$1.push(server[name](...params));\n\t\t};\n\t\treturn $1;\n\t}\n\t\n\tclose(o = {}){\n\t\tvar $2;\n\t\t\n\t\t$2 = [];\n\t\tfor (let server of iter$__(this)){\n\t\t\t\n\t\t\t$2.push(server.close(o));\n\t\t};\n\t\treturn $2;\n\t}\n\t\n\treload(o = {}){\n\t\tvar $3;\n\t\t\n\t\t$3 = [];\n\t\tfor (let server of iter$__(this)){\n\t\t\t\n\t\t\t$3.push(server.reload(o));\n\t\t};\n\t\treturn $3;\n\t}\n\t\n\tbroadcast(msg,...rest){\n\t\tvar $4;\n\t\t\n\t\t$4 = [];\n\t\tfor (let server of iter$__(this)){\n\t\t\t\n\t\t\t$4.push(server.broadcast(msg,...rest));\n\t\t};\n\t\treturn $4;\n\t}\n\t\n\temit(event,data){\n\t\tvar $5;\n\t\t\n\t\t$5 = [];\n\t\tfor (let server of iter$__(this)){\n\t\t\t\n\t\t\t$5.push(server.emit(event,data));\n\t\t};\n\t\treturn $5;\n\t}\n\tstatic {\n\t\tdefineName$__(this,'Servers');inheritClass$__(this);}\n};\n\nconst servers = new Servers;\n\nconst process = new class Process extends EventEmitter {\n\t\n\tconstructor(){\n\t\tvar self;\n\t\t\n\t\tsuper(...arguments);self = this;\n\t\tthis.autoreload = false;\n\t\tthis.state = {};\n\t\t\n\t\tif (globalThis.IMBA_RUN) {\n\t\t\t\n\t\t\tif (cluster.isWorker) {\n\t\t\t\t\n\t\t\t\tproc.on('message',function(msg) {\n\t\t\t\t\t\n\t\t\t\t\tself.emit('message',msg);\n\t\t\t\t\tif (msg[0] == 'emit') { return self.emit(...msg.slice(1)) };\n\t\t\t\t\t// reload! if msg == 'reload'\n\t\t\t\t});\n\t\t\t};\n\t\t};\n\t\tthis;\n\t}\n\t\n\t[$setup$](){\n\t\tvar self = this;\n\t\t\n\t\tif (!((this[$setupΦ$] != true) ? ((this[$setupΦ$] = true,true)) : false)) { return };\n\t\t\n\t\tthis.on('rebuild',function(e) {\n\t\t\t\n\t\t\tlet prev = globalThis.IMBA_MANIFEST;\n\t\t\tglobalThis.IMBA_MANIFEST = e;\n\t\t\treturn servers.broadcast('rebuild',e);\n\t\t});\n\t\t\n\t\tthis.on('reloading',function(e) {\n\t\t\tvar $6;\n\t\t\t\n\t\t\tself.state.reloading = true;\n\t\t\t$6 = [];\n\t\t\tfor (let server of iter$__(servers)){\n\t\t\t\t\n\t\t\t\t$6.push(server.pause());\n\t\t\t};\n\t\t\treturn $6;\n\t\t});\n\t\t\n\t\tthis.on('reloaded',async function(e) {\n\t\t\tvar $7;\n\t\t\t\n\t\t\tself.state.reloaded = true;\n\t\t\tservers.broadcast('reloaded');\n\t\t\tawait new Promise(function(_0) { return setTimeout(_0,100); });\n\t\t\t\n\t\t\t$7 = [];\n\t\t\tfor (let server of iter$__(servers)){\n\t\t\t\t\n\t\t\t\t$7.push(server.close());\n\t\t\t};\n\t\t\tlet promises = $7;\n\t\t\t\n\t\t\tsetTimeout(function() { return proc.exit(0); },100);\n\t\t\tawait Promise.all(promises);\n\t\t\treturn proc.exit(0);\n\t\t});\n\t\treturn true;\n\t}\n\t\n\tsend(msg){\n\t\t\n\t\tif (proc.send instanceof Function) {\n\t\t\t\n\t\t\treturn proc.send(msg);\n\t\t};\n\t}\n\t\n\ton(name,cb){\n\t\t\n\t\treturn super.on(...arguments);\n\t}\n\t\n\treload(){\n\t\t\n\t\t// only allow reloading once\n\t\tif (!((this.isReloading != true) ? ((this.isReloading = true,true)) : false)) { return this };\n\t\tthis.state.reloading = true;\n\t\t\n\t\tif (!(proc.env.IMBA_SERVE)) {\n\t\t\t\n\t\t\tconsole.warn(\"not possible to gracefully reload servers not started via imba start\");\n\t\t\treturn;\n\t\t};\n\t\t\n\t\tthis.send('reload');\n\t\treturn;\n\t}\n\tstatic {\n\t\tdefineName$__(this,'Process');inheritClass$__(this);}\n};\n\n\nfunction deepImports(src,links = [],depth = 0){\n\t\n\tlet asset = globalThis.IMBA_MANIFEST[src];\n\tif (links.indexOf(src) >= 0) { return links };\n\tif (asset?.imports) {\n\t\t\n\t\t\n\t\tfor (let $8 = 0, $9 = iter$__(asset?.imports), $10 = $9.length; $8 < $10; $8++) {\n\t\t\tlet item = $9[$8];\n\t\t\t\n\t\t\t// if links.indexOf(item) >= 0 and depth > 10\n\t\t\t// console.warn \"already found import!!\",item,links\n\t\t\t// return links\n\t\t\tlinks.push(item);\n\t\t\tdeepImports(item,links,depth + 1);\n\t\t};\n\t};\n\treturn links;\n};\n\nclass AssetResponder {\n\t\n\t\n\tconstructor(server,url,asset = {}){\n\t\t\n\t\tthis.server = server;\n\t\tthis.url = url;\n\t\t[this.pathname,this.query] = url.split('?');\n\t\tthis.ext = np.extname(this.pathname);\n\t\t\n\t\tthis.headers = {\n\t\t\t'Content-Type': 'text/plain',\n\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t'cache-control': 'public, max-age=31536000'\n\t\t};\n\t\tObject.assign(this.headers,server.options.assetHeaders || {});\n\t\tObject.assign(this.headers,defaultHeaders[this.ext.slice(1)] || {});\n\t\t\n\t\tthis.headers[\"max-age\"] = 86400000;\n\t\t\n\t\tif (asset.imports && server.options.preload !== false) {\n\t\t\t\n\t\t\tthis.headers.Link = deepImports(url).map(function(_0) { return (\"<\" + _0 + \">; rel=modulepreload; as=script\"); }).join(', ');\n\t\t};\n\t\t\n\t\tthis.path = server.localPathForUrl(url);\n\t}\n\t\n\t\n\trespond(req,res){\n\t\tvar self = this;\n\t\t\n\t\treturn nfs.access(this.path,nfs.constants.R_OK,function(err) {\n\t\t\t\n\t\t\tif (err) {\n\t\t\t\t\n\t\t\t\tres.writeHead(404,{});\n\t\t\t\treturn res.end();\n\t\t\t};\n\t\t\t\n\t\t\ttry {\n\t\t\t\t\n\t\t\t\tif (self.server.options.setHeaders) {\n\t\t\t\t\t\n\t\t\t\t\tself.server.options.setHeaders(res,self.path);\n\t\t\t\t};\n\t\t\t\tif (globalThis.BUN) {\n\t\t\t\t\t\n\t\t\t\t\treturn nfs.readFile(self.path,function(err,data) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tres.writeHead(200,self.headers);\n\t\t\t\t\t\treturn res.end(data);\n\t\t\t\t\t});\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tlet stream = nfs.createReadStream(self.path);\n\t\t\t\t\tres.writeHead(200,self.headers);\n\t\t\t\t\treturn stream.pipe(res);\n\t\t\t\t};\n\t\t\t} catch (e) {\n\t\t\t\t\n\t\t\t\tres.writeHead(503,{});\n\t\t\t\treturn res.end();\n\t\t\t};\n\t\t});\n\t}\n\t\n\tcreateReadStream(){\n\t\t\n\t\treturn nfs.createReadStream(this.path);\n\t}\n\t\n\tpipe(response){\n\t\t\n\t\treturn this.createReadStream().pipe(response);\n\t}\n\tstatic {\n\t\tdefineName$__(this,'AssetResponder');}\n};\n\nclass Server {\n\t\n\t\n\tstatic wrap(server,o = {}){\n\t\t\n\t\treturn new this(server,o);\n\t}\n\t\n\tlocalPathForUrl(url){\n\t\tlet path, res;\n\t\t\n\t\tlet src = url.replace(/\\?.*$/,'');\n\t\treturn this.urlToLocalPathMap[src] ??= true && (\n\t\t\t\n\t\t\tpath = np.resolve(this.publicPath,'.' + src),\n\t\t\tres = nfs.existsSync(path) && path,\n\t\t\t(!(res) && this.staticDir) && (\n\t\t\t\t\n\t\t\t\tpath = np.resolve(this.staticDir,'.' + src),\n\t\t\t\tres = nfs.existsSync(path) && path\n\t\t\t),\n\t\t\tres\n\t\t);\n\t}\n\t\n\theadersForAsset(path){\n\t\tlet headers;\n\t\t\n\t\tlet ext = np.extname(path);\n\t\treturn headers = Object.assign({\n\t\t\t'Content-Type': 'text/plain',\n\t\t\t'Access-Control-Allow-Origin': '*',\n\t\t\t'cache-control': 'public'\n\t\t},defaultHeaders[ext.slice(1)] || {});\n\t}\n\t\n\tget manifest(){\n\t\t\n\t\treturn globalThis.IMBA_MANIFEST || {};\n\t}\n\t\n\tconstructor(srv,options = {}){\n\t\tvar self = this;\n\t\t\n\t\tservers.add(this);\n\t\tthis.id = Math.random();\n\t\tthis.options = options;\n\t\tthis.closed = false;\n\t\tthis.paused = false;\n\t\tthis.server = srv;\n\t\tthis.clients = new Set;\n\t\tthis.stalledResponses = [];\n\t\tthis.assetResponders = {};\n\t\tthis.urlToLocalPathMap = {};\n\t\tthis.publicExistsMap = {};\n\t\t// temporary hack for pm2\n\t\ttry {\n\t\t\tthis.rootDir = proc.env.IMBA_OUTDIR || np.dirname(proc.env.pm_exec_path || proc.argv[1]);\n\t\t} catch (e) { };\n\t\ttry {\n\t\t\tthis.publicPath = np.resolve(this.rootDir,proc.env.IMBA_PUBDIR || globalThis.IMBA_PUBDIR || 'public');\n\t\t} catch (e) { };\n\t\tthis.staticDir = globalThis.IMBA_STATICDIR || '';\n\t\t\n\t\tif (proc.env.IMBA_PATH) {\n\t\t\t\n\t\t\tthis.devtoolsPath = np.resolve(proc.env.IMBA_PATH,'dist','hmr.js');\n\t\t};\n\t\t\n\t\tthis.scheme = (srv instanceof http.Server) ? 'http' : 'https';\n\t\t\n\t\t// fetch and remove the original request listener\n\t\tlet originalHandler = this.server._events.request;\n\t\tlet dom = globalThis[$dom$];\n\t\t\n\t\tsrv.off('request',originalHandler);\n\t\t\n\t\t// check if this is an express app?\n\t\toriginalHandler[$server$] = this;\n\t\t\n\t\tsrv.on('listening',function() {\n\t\t\t\n\t\t\t// if not silent?\n\t\t\tlet adr = self.server.address();\n\t\t\tlet host = adr.address;\n\t\t\tif (host == '::' || host == '0.0.0.0') {\n\t\t\t\t\n\t\t\t\thost = 'localhost';\n\t\t\t};\n\t\t\tlet url = (\"\" + self.scheme + \"://\" + host + \":\" + (adr.port) + \"/\");\n\t\t\t// unless proc.env.IMBA_CLUSTER\n\t\t\tif (!(proc.env.IMBA_CLUSTER)) {\n\t\t\t\t\n\t\t\t\treturn console.log((\"listening on \" + url));\n\t\t\t};\n\t\t});\n\t\t\n\t\tif (globalThis.IMBA_HMR) {\n\t\t\t\n\t\t\tglobalThis.IMBA_HMR_PATH = '/__hmr__.js';\n\t\t};\n\t\t\n\t\tthis.handler = function(req,res) {\n\t\t\tlet path;\n\t\t\t\n\t\t\tlet ishttp2 = req.constructor.name == 'Http2ServerRequest';\n\t\t\tlet url = req.url;\n\t\t\t\n\t\t\tif (self.paused || self.closed) {\n\t\t\t\t\n\t\t\t\tres.statusCode = 302;\n\t\t\t\tres.setHeader('Location',req.url);\n\t\t\t\t\n\t\t\t\tif (!(ishttp2)) {\n\t\t\t\t\t\n\t\t\t\t\tres.setHeader('Connection','close');\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tif (self.closed) {\n\t\t\t\t\t\n\t\t\t\t\tif (ishttp2) {\n\t\t\t\t\t\t\n\t\t\t\t\t\treq.stream.session.close();\n\t\t\t\t\t};\n\t\t\t\t\treturn res.end();\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\treturn self.stalledResponses.push(res);\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n\t\t\tif (globalThis.IMBA_HMR) {\n\t\t\t\t\n\t\t\t\tif (url == '/__hmr__.js' && self.devtoolsPath) {\n\t\t\t\t\t\n\t\t\t\t\t// and if hmr?\n\t\t\t\t\tlet stream = nfs.createReadStream(self.devtoolsPath);\n\t\t\t\t\tres.writeHead(200,defaultHeaders.js);\n\t\t\t\t\treturn stream.pipe(res);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tif (url == '/__hmr__') {\n\t\t\t\t\t\n\t\t\t\t\tlet headers = {\n\t\t\t\t\t\t'Content-Type': 'text/event-stream',\n\t\t\t\t\t\t'Cache-Control': 'no-cache'\n\t\t\t\t\t};\n\t\t\t\t\tif (!(ishttp2)) {\n\t\t\t\t\t\t\n\t\t\t\t\t\theaders.Connection = 'keep-alive';\n\t\t\t\t\t};\n\t\t\t\t\t\n\t\t\t\t\tres.writeHead(200,headers);\n\t\t\t\t\tself.clients.add(res);\n\t\t\t\t\tself.broadcast('init',globalThis.IMBA_MANIFEST,[res]);\n\t\t\t\t\treq.on('close',function() { return self.clients.delete(res); });\n\t\t\t\t\treturn true;\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t\t// create full url\n\t\t\tlet headers = req.headers;\n\t\t\tlet base;\n\t\t\t// console.log 'protocol',req.protocol\n\t\t\tif (ishttp2) {\n\t\t\t\t\n\t\t\t\tbase = headers[':scheme'] + '://' + headers[':authority'];\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tlet scheme = req.connection.encrypted ? 'https' : 'http';// \n\t\t\t\tbase = scheme + '://' + headers.host;\n\t\t\t};\n\t\t\t\n\t\t\tlet asset = self.manifest[url];\n\t\t\t\n\t\t\tif (asset) {\n\t\t\t\t\n\t\t\t\tlet path = self.localPathForUrl(url);\n\t\t\t\tif (path) {\n\t\t\t\t\t\n\t\t\t\t\tlet responder = self.assetResponders[url] ||= new AssetResponder(self,url,asset);\n\t\t\t\t\treturn responder.respond(req,res);\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n\t\t\tif (url.match(/\\.[A-Z\\d]{8}\\./) || url.match(/\\.\\w{1,4}($|\\?)/)) {\n\t\t\t\t\n\t\t\t\tif (path = self.localPathForUrl(url)) {\n\t\t\t\t\t\n\t\t\t\t\ttry {\n\t\t\t\t\t\t\n\t\t\t\t\t\tlet headers = self.headersForAsset(path);\n\t\t\t\t\t\tif (options.setHeaders) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\toptions.setHeaders(res,path);\n\t\t\t\t\t\t};\n\t\t\t\t\t\tif (globalThis.BUN) {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\treturn nfs.readFile(path,function(err,data) {\n\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\tif (err) {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tres.writeHead(500,{});\n\t\t\t\t\t\t\t\t\treturn res.write((\"Error getting the file: \" + err));\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t\n\t\t\t\t\t\t\t\t\tres.writeHead(200,headers);\n\t\t\t\t\t\t\t\t\treturn res.end(data);\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\n\t\t\t\t\t\t\tlet stream = nfs.createReadStream(path);\n\t\t\t\t\t\t\tres.writeHead(200,headers);\n\t\t\t\t\t\t\treturn stream.pipe(res);\n\t\t\t\t\t\t};\n\t\t\t\t\t} catch (e) {\n\t\t\t\t\t\t\n\t\t\t\t\t\tres.writeHead(503,{});\n\t\t\t\t\t\treturn res.end();\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n\t\t\t// continue to the real server\n\t\t\tif (dom) {\n\t\t\t\t\n\t\t\t\tlet loc = new dom.Location(req.url,base);\n\t\t\t\t// create a context - not a document?\n\t\t\t\treturn dom.Document.create({location: loc},function() {\n\t\t\t\t\t\n\t\t\t\t\treturn originalHandler(req,res);\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\treturn originalHandler(req,res);\n\t\t\t};\n\t\t};\n\t\t\n\t\tsrv.on('request',this.handler);\n\t\t\n\t\tsrv.on('close',function() {\n\t\t\t\n\t\t\treturn console.log(\"server is closing!!!\");\n\t\t});\n\t\t\n\t\tif (globalThis.IMBA_RUN) {\n\t\t\t\n\t\t\tif (cluster.isWorker) {\n\t\t\t\t\n\t\t\t\tprocess[$setup$]();\n\t\t\t\tprocess.send('serve');\n\t\t\t};\n\t\t};\n\t}\n\t\n\tbroadcast(event,data = {},clients = this.clients){\n\t\t\n\t\tdata = JSON.stringify(data);\n\t\tlet msg = (\"data: \" + data + \"\\n\\n\\n\");\n\t\tfor (let client of iter$__(clients)){\n\t\t\t\n\t\t\tclient.write((\"event: \" + event + \"\\n\"));\n\t\t\tclient.write(\"id: imba\\n\");\n\t\t\tclient.write(msg);\n\t\t};\n\t\treturn this;\n\t}\n\t\n\tpause(){\n\t\t\n\t\tif ((this.paused != true) ? ((this.paused = true,true)) : false) {\n\t\t\t\n\t\t\tthis.broadcast('paused');\n\t\t};\n\t\treturn this;\n\t}\n\t\n\tresume(){\n\t\t\n\t\tif ((this.paused != false) ? ((this.paused = false,true)) : false) {\n\t\t\t\n\t\t\tthis.broadcast('resumed');\n\t\t\treturn this.flushStalledResponses();\n\t\t};\n\t}\n\t\n\tflushStalledResponses(){\n\t\t\n\t\tfor (let $11 = 0, $12 = iter$__(this.stalledResponses), $13 = $12.length; $11 < $13; $11++) {\n\t\t\tlet res = $12[$11];\n\t\t\tres.end();\n\t\t};\n\t\treturn this.stalledResponses = [];\n\t}\n\t\n\tclose(){\n\t\tvar self = this;\n\t\t\n\t\tthis.pause();\n\t\t\n\t\treturn new Promise(function(resolve) {\n\t\t\t\n\t\t\tself.closed = true;\n\t\t\tself.server.close(resolve);\n\t\t\treturn self.flushStalledResponses();\n\t\t});\n\t}\n\tstatic {\n\t\tdefineName$__(this,'Server');}\n};\n\nexport function serve(srv,...params){\n\t\n\treturn Server.wrap(srv,...params);\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","css":""}