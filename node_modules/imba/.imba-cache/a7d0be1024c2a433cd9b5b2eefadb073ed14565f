{"id":"hb","warnings":[],"errors":[],"js":"function defineName$__(cls,name){\n\tObject.defineProperty(cls,\"name\",{value:name,configurable:true});\n};\nconst $__initor__$ = Symbol.for('#__initor__'), $__inited__$ = Symbol.for('#__inited__'), $__hooks__$ = Symbol.for('#__hooks__'), $__listeners__$ = Symbol.for('#__listeners__');\n\n/*body*/\nconst dashRegex = /-./g;\n\n\n\nexport class LazyProxy {\n\t\n\tstatic for(getter){\n\t\t\n\t\treturn new Proxy({},new this(getter));\n\t}\n\t\n\tconstructor(getter){\n\t\t\n\t\tthis.getter = getter;\n\t}\n\t\n\tget target(){\n\t\t\n\t\treturn this.getter();\n\t}\n\t\n\tget(_,key){\n\t\t\n\t\treturn this.target[key];\n\t}\n\t\n\tset(_,key,value){\n\t\t\n\t\tthis.target[key] = value;\n\t\treturn true;\n\t}\n\tstatic {\n\t\tdefineName$__(this,'LazyProxy');}\n};\n\nexport function proxy(getter,placeholder = {}){\n\t\n\treturn new Proxy(placeholder,new LazyProxy(getter));\n};\n\nexport function parseTime(value){\n\t\n\tlet typ = typeof value;\n\tif (typ == 'number') {\n\t\t\n\t\treturn value;\n\t};\n\t\n\tif (typ == 'string') {\n\t\t\n\t\tif ((/^\\d+fps$/).test(value)) {\n\t\t\t\n\t\t\treturn 1000 / parseFloat(value);\n\t\t} else if ((/^([-+]?[\\d\\.]+)s$/).test(value)) {\n\t\t\t\n\t\t\treturn parseFloat(value) * 1000;\n\t\t} else if ((/^([-+]?[\\d\\.]+)ms$/).test(value)) {\n\t\t\t\n\t\t\treturn parseFloat(value);\n\t\t};\n\t};\n\t// throw or return NaN?\n\treturn null;\n\t\n};\n\nexport function toCamelCase(str){\n\t\n\tif (str.indexOf('-') >= 0) {\n\t\t\n\t\treturn str.replace(dashRegex,function(_0) { return _0.charAt(1).toUpperCase(); });\n\t} else {\n\t\t\n\t\treturn str;\n\t};\n};\n\nexport function getDeepPropertyDescriptor(item,key,stop){\n\t\n\t\n\tif (!(item)) {\n\t\t\n\t\treturn undefined;\n\t};\n\t\n\tlet desc = Object.getOwnPropertyDescriptor(item,key);\n\t\n\tif (desc || item == stop) {\n\t\t\n\t\treturn desc || undefined;\n\t\t\n\t};\n\treturn getDeepPropertyDescriptor(Reflect.getPrototypeOf(item),key,stop);\n};\n\n// Basic events - move to separate file?\nconst emit__ = function(event,args,node) {\n\t\n\tlet prev;\n\tlet cb;\n\tlet ret;\n\t\n\twhile ((prev = node) && (node = node.next)){\n\t\t\n\t\tif (cb = node.listener) {\n\t\t\t\n\t\t\tif (node.path && cb[node.path]) {\n\t\t\t\t\n\t\t\t\tret = args ? cb[node.path].apply(cb,args) : cb[node.path]();\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\t// check if it is a method?\n\t\t\t\tret = args ? cb.apply(node,args) : cb.call(node);\n\t\t\t};\n\t\t};\n\t\t\n\t\tif (node.times && --node.times <= 0) {\n\t\t\t\n\t\t\tprev.next = node.next;\n\t\t\tnode.listener = null;\n\t\t};\n\t};\n\treturn;\n};\n\n// method for registering a listener on object\nexport function listen(obj,event,listener,path){\n\t\n\tlet cbs;\n\tlet list;\n\tlet tail;\n\tcbs = obj[$__listeners__$] ||= {};\n\tlist = cbs[event] ||= {};\n\ttail = list.tail || (list.tail = (list.next = {}));\n\ttail.listener = listener;\n\ttail.path = path;\n\tlist.tail = tail.next = {};\n\treturn tail;\n};\n\n// register a listener once\nexport function once(obj,event,listener){\n\t\n\tlet tail = listen(obj,event,listener);\n\ttail.times = 1;\n\treturn tail;\n};\n\n// remove a listener\nexport function unlisten(obj,event,cb,meth){\n\t\n\tlet node;\n\tlet prev;\n\tlet meta = obj[$__listeners__$];\n\tif (!(meta)) { return };\n\t\n\tif (node = meta[event]) {\n\t\t\n\t\twhile ((prev = node) && (node = node.next)){\n\t\t\t\n\t\t\tif (node == cb || node.listener == cb) {\n\t\t\t\t\n\t\t\t\tprev.next = node.next;\n\t\t\t\t// check for correct path as well?\n\t\t\t\tnode.listener = null;\n\t\t\t\tbreak;\n\t\t\t};\n\t\t};\n\t};\n\treturn;\n};\n\n// emit event\nexport function emit(obj,event,params){\n\tlet cb;\n\t\n\tif (cb = obj[$__listeners__$]) {\n\t\t\n\t\tif (cb[event]) { emit__(event,params,cb[event]) };\n\t\tif (cb.all) { emit__(event,[event,params],cb.all) };\n\t};\n\treturn;\n};\n\nexport class Emitter {\n\t\n\temit(name,...params){\n\t\treturn emit(this,name,params);\n\t}\n\ton(name,...params){\n\t\treturn listen(this,name,...params);\n\t}\n\tonce(name,...params){\n\t\treturn once(this,name,...params);\n\t}\n\tun(name,...params){\n\t\treturn unlisten(this,name,...params);\n\t}\n\tstatic {\n\t\tdefineName$__(this,'Emitter');}\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","css":""}