{"id":"cj","warnings":[],"errors":[],"js":"function defineName$__(cls,name){\n\tObject.defineProperty(cls,\"name\",{value:name,configurable:true});\n};;\nfunction iter$__(a){ let v; return a ? ((v=a.toIterable) ? v.call(a) : a) : a; };;\nfunction inheritClass$__(cls){\n\tObject.getPrototypeOf(cls.prototype).constructor?.inherited?.(cls);\n};;\nfunction extend$__(target,ext){\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(ext);\n\tdelete descriptors.constructor;\n\t// @ts-ignore\n\tObject.defineProperties(target,descriptors);\n\treturn target;\n};\nconst $parent$ = Symbol.for('#parent'), $closestNode$ = Symbol.for('#closestNode'), $isRichElement$ = Symbol.for('#isRichElement'), $afterVisit$ = Symbol.for('#afterVisit'), $__initor__$ = Symbol.for('#__initor__'), $__inited__$ = Symbol.for('#__inited__'), $__hooks__$ = Symbol.for('#__hooks__'), $appendChild$ = Symbol.for('#appendChild'), $removeChild$ = Symbol.for('#removeChild'), $replaceChild$ = Symbol.for('#replaceChild'), $insertInto$ = Symbol.for('#insertInto'), $replaceWith$ = Symbol.for('#replaceWith'), $insertChild$ = Symbol.for('#insertChild'), $removeFrom$ = Symbol.for('#removeFrom'), $placeChild$ = Symbol.for('#placeChild'), $registerFunctionalSlot$ = Symbol.for('#registerFunctionalSlot'), $getFunctionalSlot$ = Symbol.for('#getFunctionalSlot'), $getSlot$ = Symbol.for('#getSlot'), $$parent$ = Symbol.for('##parent'), $$up$ = Symbol.for('##up'), $$flags$ = Symbol.for('##flags'), $domFlags$ = Symbol.for('#domFlags'), $end$ = Symbol.for('#end'), $textContent$ = Symbol.for('#textContent'), $textNode$ = Symbol.for('#textNode'), $functionalSlots$ = Symbol.for('#functionalSlots');\nvar $1 = Symbol();\n\n/*body*/\nimport {Text,createComment,createTextNode,Comment,Node} from './core';\nimport {Flags} from './flags';\n\nexport function use_slots(){\n\t\n\treturn true;\n};\n\n\nexport class Fragment {\n\t\n\t\n\tconstructor(){\n\t\t\n\t\tthis.childNodes = [];\n\t\t\n\t}\n\tlog(...params){\n\t\t\n\t\treturn;\n\t\t\n\t}\n\thasChildNodes(){\n\t\t\n\t\treturn false;\n\t}\n\t\n\tset [$parent$](value){\n\t\t\n\t\tthis[$$parent$] = value;\n\t}\n\t\n\tget [$parent$](){\n\t\t\n\t\treturn this[$$parent$] || this[$$up$];\n\t}\n\t\n\tget [$closestNode$](){\n\t\t\n\t\treturn this[$parent$][$closestNode$];\n\t}\n\t\n\tget [$isRichElement$](){\n\t\t\n\t\treturn true;\n\t}\n\t\n\tget flags(){\n\t\t\n\t\treturn this[$$flags$] ||= new Flags(this);\n\t}\n\t\n\tflagSync$(){\n\t\t\n\t\treturn this;\n\t}\n\t\n\t[$afterVisit$](){\n\t\t\n\t\treturn this;\n\t}\n\tstatic {\n\t\tdefineName$__(this,'Fragment');}\n};\n\nlet counter = 0;\n// like a list\nclass VirtualFragment extends Fragment {\n\t\n\tconstructor(flags,parent){\n\t\t\n\t\tsuper(...arguments);\n\t\tthis[$$up$] = parent;\n\t\tthis.parentNode = null;\n\t\tthis[$domFlags$] = flags;\n\t\tthis.childNodes = [];\n\t\tthis[$end$] = createComment('slot' + counter++);\n\t\t\n\t\tif (parent) {\n\t\t\t\n\t\t\tparent[$appendChild$](this);\n\t\t};this[$__initor__$]===$1 && (this[$__hooks__$]&&this[$__hooks__$].inited(this),this[$__inited__$] && this[$__inited__$]());\n\t}\n\t\n\tget [$parent$](){\n\t\t\n\t\treturn this[$$parent$] || this.parentNode || this[$$up$];\n\t}\n\t\n\tset textContent(text){\n\t\t\n\t\tthis[$textContent$] = text;\n\t}\n\t\n\tget textContent(){\n\t\t\n\t\treturn this[$textContent$];\n\t\t\n\t}\n\thasChildNodes(){\n\t\t\n\t\tfor (let $2 = 0, $3 = iter$__(this.childNodes), $4 = $3.length; $2 < $4; $2++) {\n\t\t\tlet item = $3[$2];\n\t\t\tif (item instanceof Fragment) {\n\t\t\t\t\n\t\t\t\tif (item.hasChildNodes()) { return true };\n\t\t\t};\n\t\t\tif (item instanceof Comment) {\n\t\t\t\t\n\t\t\t\ttrue;\n\t\t\t} else if (item instanceof Node) {\n\t\t\t\t\n\t\t\t\treturn true;\n\t\t\t};\n\t\t\t\n\t\t\t// unless item isa Comment\n\t\t\t// return false\n\t\t};\n\t\treturn false;\n\t\t// #children.length == 0\n\t\t\n\t}\n\ttext$(item){\n\t\t\n\t\tif (!this[$textNode$]) {\n\t\t\t\n\t\t\tthis[$textNode$] = this[$placeChild$](item);\n\t\t} else {\n\t\t\t\n\t\t\tthis[$textNode$].textContent = item;\n\t\t};\n\t\treturn this[$textNode$];\n\t\t\n\t}\n\tappendChild(child){\n\t\t\n\t\tif (this.parentNode) {\n\t\t\t\n\t\t\tchild[$insertInto$](this.parentNode,this[$end$]);\n\t\t};\n\t\treturn this.childNodes.push(child);\n\t}\n\t\n\t[$appendChild$](child){\n\t\t\n\t\tif (this.parentNode) {\n\t\t\t\n\t\t\tchild[$insertInto$](this.parentNode,this[$end$]);\n\t\t} else {\n\t\t\t\n\t\t\tchild[$$up$] ??= (this[$$up$] || this);\n\t\t};\n\t\treturn this.childNodes.push(child);\n\t}\n\t\n\tinsertBefore(node,refnode){\n\t\t\n\t\t// check if this should really happen?\n\t\tif (this.parentNode) {\n\t\t\t\n\t\t\tthis.parentNode[$insertChild$](node,refnode);\n\t\t};\n\t\tlet idx = this.childNodes.indexOf(refnode);\n\t\tif (idx >= 0) {\n\t\t\t\n\t\t\tthis.childNodes.splice(idx,0,node);\n\t\t};\n\t\treturn node;\n\t}\n\t\n\t\n\t[$removeChild$](node){\n\t\t\n\t\tif (this.parentNode) {\n\t\t\t\n\t\t\tthis.parentNode[$removeChild$](node);\n\t\t};\n\t\tlet idx = this.childNodes.indexOf(node);\n\t\tif (idx >= 0) {\n\t\t\t\n\t\t\tthis.childNodes.splice(idx,1);\n\t\t};\n\t\treturn;\n\t}\n\t\n\t[$replaceChild$](newnode,oldnode){\n\t\t\n\t\tif (this.parentNode) {\n\t\t\t\n\t\t\tthis.parentNode[$replaceChild$](newnode,oldnode);\n\t\t};\n\t\tlet idx = this.childNodes.indexOf(oldnode);// what if text?\n\t\tthis.childNodes[idx] = newnode;\n\t\t// let res = #insertChild(newnode,oldnode)\n\t\t// #removeChild(oldnode)\n\t\treturn newnode;\n\t\t\n\t\t\n\t}\n\t[$insertInto$](parent,before){\n\t\t\n\t\t// console.log 'frag #insertInto',parent,before,#children\n\t\tlet prev = this.parentNode;\n\t\t\n\t\tif ((this.parentNode != parent) ? ((this.parentNode = parent,true)) : false) {\n\t\t\t\n\t\t\t// log '#insertInto',parent,prev,before,#end\n\t\t\t// what if before is a fragment etc?\n\t\t\tif (this[$end$]) {\n\t\t\t\t\n\t\t\t\tbefore = this[$end$][$insertInto$](parent,before);\n\t\t\t};\n\t\t\t// before = #end\n\t\t\tfor (let $5 = 0, $6 = iter$__(this.childNodes), $7 = $6.length; $5 < $7; $5++) {\n\t\t\t\tlet item = $6[$5];\n\t\t\t\titem[$insertInto$](parent,before);\n\t\t\t};\n\t\t};\n\t\treturn this;\n\t\t\n\t}\n\t[$replaceWith$](node,parent){\n\t\t\n\t\t// log '#replaceWith',node,parent\n\t\t// what if this\n\t\t// log 'replaced with',node,parent\n\t\tlet res = node[$insertInto$](parent,this[$end$]);\n\t\tthis[$removeFrom$](parent);\n\t\treturn res;\n\t}\n\t\n\t[$insertChild$](node,refnode){\n\t\t\n\t\tif (this.parentNode) {\n\t\t\t\n\t\t\tthis.insertBefore(node,refnode || this[$end$]);\n\t\t};\n\t\t\n\t\tif (refnode) {\n\t\t\t\n\t\t\tlet idx = this.childNodes.indexOf(refnode);\n\t\t\t// console.log 'vfragment #insertChild',node,refnode,refnode == #end,idx,#children\n\t\t\tif (idx >= 0) {\n\t\t\t\t\n\t\t\t\tthis.childNodes.splice(idx,0,node);\n\t\t\t};\n\t\t} else {\n\t\t\t\n\t\t\tthis.childNodes.push(node);\n\t\t};\n\t\treturn node;\n\t\t\n\t\t\n\t\t// for item in #children\n\t\t// \titem.#removeFrom(parent)\n\t}\n\t\n\t[$removeFrom$](parent){\n\t\t\n\t\tfor (let $8 = 0, $9 = iter$__(this.childNodes), $10 = $9.length; $8 < $10; $8++) {\n\t\t\tlet item = $9[$8];\n\t\t\t\n\t\t\t// log '#removeFrom',item,parent\n\t\t\titem[$removeFrom$](parent);\n\t\t};\n\t\tif (this[$end$]) { this[$end$][$removeFrom$](parent) };\n\t\tthis.parentNode = null;\n\t\treturn this;\n\t}\n\t\n\t[$placeChild$](item,f,prev){\n\t\t\n\t\tlet par = this.parentNode;\n\t\tlet type = typeof item;\n\t\t\n\t\tif (type === 'undefined' || item === null) {\n\t\t\t\n\t\t\tif (prev && (prev instanceof Comment)) { // check perf\n\t\t\t\t\n\t\t\t\treturn prev;\n\t\t\t};\n\t\t\t\n\t\t\tlet el = createComment('');\n\t\t\t\n\t\t\tif (prev) {\n\t\t\t\t\n\t\t\t\tlet idx = this.childNodes.indexOf(prev);\n\t\t\t\tthis.childNodes.splice(idx,1,el);\n\t\t\t\tif (par) {\n\t\t\t\t\t\n\t\t\t\t\tprev[$replaceWith$](el,par);\n\t\t\t\t};\n\t\t\t\t// parentNode.#insert(item,f,prev or #end)\n\t\t\t\treturn el;\n\t\t\t};\n\t\t\t\n\t\t\t\n\t\t\tthis.childNodes.push(el);\n\t\t\tif (par) { el[$insertInto$](par,this[$end$]) };\n\t\t\treturn el;\n\t\t\t// return prev ? prev.#replaceWith(el,self) : el.#insertInto(this,null)\n\t\t};\n\t\t\n\t\tif (item === prev) {\n\t\t\t\n\t\t\treturn item;\n\t\t\t\n\t\t};\n\t\tif (type !== 'object') {\n\t\t\t\n\t\t\tlet res;\n\t\t\tlet txt = item;\n\t\t\t\n\t\t\tif (prev) {\n\t\t\t\t\n\t\t\t\tif (prev instanceof Text) { // check perf\n\t\t\t\t\t\n\t\t\t\t\tprev.textContent = txt;\n\t\t\t\t\treturn prev;\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tres = createTextNode(txt);\n\t\t\t\t\tlet idx = this.childNodes.indexOf(prev);\n\t\t\t\t\tthis.childNodes.splice(idx,1,res);\n\t\t\t\t\tif (par) { prev[$replaceWith$](res,par) };\n\t\t\t\t\treturn res;\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tthis.childNodes.push(res = createTextNode(txt));\n\t\t\t\t// self.appendChild$(res = createTextNode(txt))\n\t\t\t\tif (par) { res[$insertInto$](par,this[$end$]) };\n\t\t\t\treturn res;\n\t\t\t};\n\t\t} else if (prev) {\n\t\t\t\n\t\t\tlet idx = this.childNodes.indexOf(prev);\n\t\t\tthis.childNodes.splice(idx,1,item);\n\t\t\tif (par) { prev[$replaceWith$](item,par) };\n\t\t\treturn item;\n\t\t} else {\n\t\t\t\n\t\t\tthis.childNodes.push(item);\n\t\t\tif (par) { item[$insertInto$](par,this[$end$]) };\n\t\t\treturn item;\n\t\t};\n\t}\n\tstatic {\n\t\tthis.prototype[$__initor__$] = $1;defineName$__(this,'VirtualFragment');inheritClass$__(this);}\n};\n\n\nexport function createLiveFragment(bitflags,par){\n\t\n\tconst el = new VirtualFragment(bitflags,par);\n\treturn el;\n\t\n};\nexport function createSlot(bitflags,par){\n\t\n\tconst el = new VirtualFragment(bitflags,null);\n\tel[$$up$] = par;\n\t// el.setup$(bitflags, options)\n\t// el.##up = par if par\n\treturn el;\n};\n\nclass Î©Node {\n\t\n\t[$registerFunctionalSlot$](name){\n\t\t\n\t\tlet map = this[$functionalSlots$] ||= {};\n\t\treturn map[name] ||= createSlot(0,this);\n\t}\n\t\n\t[$getFunctionalSlot$](name,context){\n\t\t\n\t\tlet map = this[$functionalSlots$];\n\t\treturn map && map[name] || this[$getSlot$](name,context);\n\t}\n\t\n\t[$getSlot$](name,context){\n\t\t\n\t\tif (name == '__' && !(this.render)) {\n\t\t\t\n\t\t\treturn this;\n\t\t};\n\t\t\n\t\treturn this.__slots[name] ||= createSlot(0,this);\n\t}\n\tstatic {\n\t\tdefineName$__(this,'Node');}\n};\nextend$__(Node.prototype,Î©Node.prototype);\n;\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","css":""}