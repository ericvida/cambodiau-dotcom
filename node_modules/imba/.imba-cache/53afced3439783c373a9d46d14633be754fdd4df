{"id":"dw","warnings":[],"errors":[],"js":"function iter$__(a){ let v; return a ? ((v=a.toIterable) ? v.call(a) : a) : a; };;\nfunction defineName$__(cls,name){\n\tObject.defineProperty(cls,\"name\",{value:name,configurable:true});\n};;\nfunction extend$__(target,ext){\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(ext);\n\tdelete descriptors.constructor;\n\t// @ts-ignore\n\tObject.defineProperties(target,descriptors);\n\treturn target;\n};\nimport {Component as imba_Component, getTagType as imba_getTagType} from 'imba';\nconst $__init__$ = Symbol.for('#__init__'), $__patch__$ = Symbol.for('#__patch__'), $__initor__$ = Symbol.for('#__initor__'), $__inited__$ = Symbol.for('#__inited__'), $__hooks__$ = Symbol.for('#__hooks__');\n\n/*body*/\nimport {en} from './input_bible_stories_eng';\nimport {kh} from './input_bible_stories_khmer';\nimport {titles} from './input_bible_stories_titles';\n\nclass CalculateCourseUsageData {\n\t[$__patch__$]($$ = {}){\n\t\tvar $1;\n\t\t($1 = $$.worth_zero) !== undefined && (this.worth_zero = $1);\n\t\t\n\t}\n\t[$__init__$]($$ = null,deep = true){\n\t\tvar $2;\n\t\tthis.worth_zero = ($$ && ($2 = $$.worth_zero) !== undefined) ? ($2) : [\n\t\t\t\"?\",\n\t\t\t\"ៗ\",\n\t\t\t\"។\",\n\t\t\t\" \",\n\t\t\t\",\",\n\t\t\t\"-\",\n\t\t\t\"-\",\n\t\t\t\"៖\",\n\t\t\t\";\",\n\t\t\t\"«\",\n\t\t\t\"»\",\n\t\t\t\"!\",\n\t\t\t'\"'\n\t\t];\n\t\t\n\t}\n\tconstructor(){\n\t\tthis[$__init__$]();\n\t\tlet consolidated_data = this.consolidateBibleStoryData();\n\t\tlet res = this.enrichCourseData(consolidated_data);\n\t\treturn res;\n\t\t// convert array tree into object tree\n\t}\n\tconsolidateBibleStoryData(){\n\t\t\n\t\t// make a regex that selects a space that has no space before or no space after\n\t\t// let singlespace = /(?<!\\s)\\s(?!\\s)/gi\n\t\t// make a regext that selects two spaces that have a word before and after it\n\t\t// let doublespace = /(?<!\\s)\\s\\s(?!\\s)/gi\n\t\tlet user_updated = [];\n\t\tlet res_user = titles;\n\t\tlet courses_updated = [];\n\t\tfor (let ci = 0, $3 = iter$__(titles.courses), $8 = $3.length; ci < $8; ci++) {\n\t\t\tlet course = $3[ci];\n\t\t\tlet res_course = course;\n\t\t\tlet lessons_updated = [];\n\t\t\tfor (let li = 0, $4 = iter$__(course.lessons), $7 = $4.length; li < $7; li++) { // lesson\n\t\t\t\tlet lesson = $4[li];\n\t\t\t\tlet res_lesson = lesson;\n\t\t\t\tres_lesson.phrases = kh[li];\n\t\t\t\tlet phrases_updated = [];\n\t\t\t\tlet lesson_num_en = li;\n\t\t\t\tfor (let si = 0, $5 = iter$__(lesson.phrases), $6 = $5.length; si < $6; si++) {\n\t\t\t\t\tlet phrase = $5[si];\n\t\t\t\t\tlet new_phrase = {};\n\t\t\t\t\tlet str = phrase.replace(/\\s\\s/gi,\"|_|\").replace(/\\s/gi,\"|\");\n\t\t\t\t\tlet arr = str.split('|');\n\t\t\t\t\tlet phrase_num_en = si;\n\t\t\t\t\tlet phrase_num_kh = arr[0];\n\t\t\t\t\tarr.shift();\n\t\t\t\t\tlet text = arr.join('|');\n\t\t\t\t\ttext = text.replace(/_/gi,' ');\n\t\t\t\t\tlet img = \"0-0\";\n\t\t\t\t\tif (si === 0) {\n\t\t\t\t\t\t\n\t\t\t\t\t\timg = (\"\" + (li + 1) + \"-\" + (lesson.image));\n\t\t\t\t\t} else {\n\t\t\t\t\t\t\n\t\t\t\t\t\timg = (\"\" + (li + 1) + \"-\" + si);\n\t\t\t\t\t};\n\t\t\t\t\tlet res_phrase = {\n\t\t\t\t\t\tindex: phrase_num_en,\n\t\t\t\t\t\timage: (\"https://github.com/ericvida/cambodiau-images/blob/main/obs-en-\" + img + \".jpg?raw=true\"),\n\t\t\t\t\t\tindex_kh: phrase_num_kh,\n\t\t\t\t\t\tkhmer: text,\n\t\t\t\t\t\tmeaning: en[lesson_num_en][phrase_num_en]\n\t\t\t\t\t};\n\t\t\t\t\tphrases_updated.push(res_phrase);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tres_lesson.phrases = phrases_updated;\n\t\t\t\tlessons_updated.push(res_lesson);\n\t\t\t\t// console.log 'lessons', lessons_updated\n\t\t\t};\n\t\t\t\n\t\t\tres_course.lessons = lessons_updated;\n\t\t\tcourses_updated.push(res_course);\n\t\t\t// console.warn 'courses', res_course, courses_updated\n\t\t};\n\t\t\n\t\tres_user.courses = courses_updated;\n\t\tuser_updated = res_user;\n\t\t// console.error 'user', res_user, user_updated\n\t\t\n\t\treturn user_updated;\n\t}\n\t\n\t// Finds all words used in each course, lesson, and phrase.\n\t// counts how many times the are use in phrase, lesson, and course.\n\t// and store that information for calculating progress later.\n\tenrichCourseData(user){\n\t\t\n\t\tlet res_user = user;\n\t\tlet user_updated = [];\n\t\tfor (let $9 = 0, $10 = iter$__(user.courses), $17 = $10.length; $9 < $17; $9++) {\n\t\t\tlet course = $10[$9];\n\t\t\tlet res_course = course;\n\t\t\tlet course_updated = [];\n\t\t\tfor (let $11 = 0, $12 = iter$__(course?.lessons), $16 = $12.length; $11 < $16; $11++) {\n\t\t\t\tlet lesson = $12[$11];\n\t\t\t\tlet res_lesson = lesson;\n\t\t\t\tlet lesson_updated = [];\n\t\t\t\tfor (let $13 = 0, $14 = iter$__(lesson?.phrases), $15 = $14.length; $13 < $15; $13++) {\n\t\t\t\t\tlet phrase = $14[$13];\n\t\t\t\t\tlet phrase_updated = phrase;\n\t\t\t\t\tphrase_updated.word_set = this.getSameWordSet(phrase?.khmer);\n\t\t\t\t\tphrase_updated.word_set_count = this.getSameWordSet(phrase?.khmer).length;\n\t\t\t\t\tphrase_updated.word_usage_count = this.getSameWordUsage(phrase?.khmer);\n\t\t\t\t\tphrase_updated.word_usage_count_sum = phrase_updated.word_usage_count_sum = Object.values(this.getSameWordUsage(phrase?.khmer)).reduce(function(a,b) { return a + b; },0);\n\t\t\t\t\t// phrase_updated.khmer = phrase_updated..khmer.split('|') || ''\n\t\t\t\t\t// phrase_updated.english = phrase_updated..english.split('|') || ''\n\t\t\t\t\tlesson_updated.push(phrase_updated);\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tres_lesson.phrases = lesson_updated;\n\t\t\t\tres_lesson.word_set = this.getChildrenWordSet(res_lesson?.phrases);\n\t\t\t\tres_lesson.word_set_count = res_lesson?.word_set.length;\n\t\t\t\tres_lesson.word_usage_count = this.getChildrenWordUsage(res_lesson?.phrases);\n\t\t\t\tres_lesson.word_usage_count_sum = this.getChildrenWordUsageCount(res_lesson?.word_usage_count);\n\t\t\t\tcourse_updated.push(res_lesson);\n\t\t\t};\n\t\t\t\n\t\t\tres_course.lessons = course_updated;\n\t\t\tres_course.word_set = this.getChildrenWordSet(res_course?.lessons);\n\t\t\tres_course.word_set_count = res_course?.word_set.length;\n\t\t\tres_course.word_usage_count = this.getChildrenWordUsage(res_course?.lessons);\n\t\t\tres_course.word_usage_count_sum = this.getChildrenWordUsageCount(res_course?.word_usage_count);\n\t\t\tuser_updated.push(res_course);\n\t\t};\n\t\tres_user.courses = user_updated;\n\t\tres_user.word_set = this.getChildrenWordSet(res_user?.courses);\n\t\tres_user.word_set_count = res_user?.word_set.length;\n\t\tres_user.word_usage_count = this.getChildrenWordUsage(res_user?.courses);\n\t\tres_user.word_usage_count_sum = this.getChildrenWordUsageCount(res_user?.word_usage_count);\n\t\treturn res_user;\n\t}\n\t\n\tgetSameWordSet(input){\n\t\t\n\t\tlet res = [...new Set(input.split('|'))];\n\t\treturn res;\n\t}\n\t\n\tgetSameWordUsage(input){\n\t\t\n\t\tlet word_array = input.split('|');\n\t\tlet word_count = {};\n\t\tfor (let $18 = 0, $19 = iter$__(word_array), $20 = $19.length; $18 < $20; $18++) {\n\t\t\tlet item = $19[$18];\n\t\t\tif (word_count[item]) {\n\t\t\t\t\n\t\t\t\tif (this.worth_zero.includes(item)) {\n\t\t\t\t\t\n\t\t\t\t\tword_count[item] = 0;\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tword_count[item] += 1;\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tif (this.worth_zero.includes(item)) {\n\t\t\t\t\t\n\t\t\t\t\tword_count[item] = 0;\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tword_count[item] = 1;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\treturn word_count;\n\t\t\n\t}\n\tgetChildrenWordSet(children){\n\t\t\n\t\tlet allModulesSet = new Set;\n\t\tfor (let $21 = 0, $22 = iter$__(children), $23 = $22.length; $21 < $23; $21++) {\n\t\t\tlet child = $22[$21];\n\t\t\tchild.word_set.forEach(function(x) { return allModulesSet.add(x); });\n\t\t};\n\t\tlet res = [...allModulesSet];\n\t\treturn res;\n\t}\n\t\n\tgetChildrenWordUsage(children){\n\t\t\n\t\tlet word_usage_count = {};\n\t\tfor (let $24 = 0, $25 = iter$__(children), $29 = $25.length; $24 < $29; $24++) {\n\t\t\tlet child = $25[$24];\n\t\t\tlet child_word_usage_count = child.word_usage_count;\n\t\t\tfor (let $26 = 0, $27 = Object.keys(child_word_usage_count), $28 = $27.length, key, val; $26 < $28; $26++){\n\t\t\t\tkey = $27[$26];val = child_word_usage_count[key];\n\t\t\t\tif (word_usage_count[key]) {\n\t\t\t\t\t\n\t\t\t\t\tword_usage_count[key] += val;\n\t\t\t\t} else {\n\t\t\t\t\t\n\t\t\t\t\tword_usage_count[key] = val;\n\t\t\t\t};\n\t\t\t};\n\t\t};\n\t\treturn word_usage_count;\n\t}\n\t\n\tgetChildrenWordUsageCount(wordΞusage){\n\t\t\n\t\tlet counter = 0;\n\t\tfor (let $30 = 0, $31 = Object.keys(wordΞusage), $32 = $31.length, key, val; $30 < $32; $30++){\n\t\t\tkey = $31[$30];val = wordΞusage[key];\n\t\t\tcounter += val;\n\t\t};\n\t\treturn counter;\n\t}\n\tstatic {\n\t\tdefineName$__(this,'CalculateCourseUsageData');}\n};\n\nexport let courses_data = new CalculateCourseUsageData;\n// console.log courses_data\n// To improve application speed.\n// log courses_data above with command below\n// copy object from console and paste into export let below\n// then Comment out courses_data above.\n\n// export let courses_data = {}\n\nextend$__(imba_getTagType('element-dw-af','Element').prototype,(class {\n\t\n\tget courses_data(){\n\t\t\n\t\treturn courses_data;\n\t}\n\tstatic {\n\t\tdefineName$__(this,'Element');}\n}).prototype);\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","css":""}