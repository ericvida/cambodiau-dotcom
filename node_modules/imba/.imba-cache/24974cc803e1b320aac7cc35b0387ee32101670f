{"id":"ff","warnings":[],"errors":[],"js":"function defineName$__(cls,name){\n\tObject.defineProperty(cls,\"name\",{value:name,configurable:true});\n};;\nfunction inheritClass$__(cls){\n\tObject.getPrototypeOf(cls.prototype).constructor?.inherited?.(cls);\n};;\nfunction iter$__(a){ let v; return a ? ((v=a.toIterable) ? v.call(a) : a) : a; };;\nfunction extend$__(target,ext){\n\t// @ts-ignore\n\tconst descriptors = Object.getOwnPropertyDescriptors(ext);\n\tdelete descriptors.constructor;\n\t// @ts-ignore\n\tObject.defineProperties(target,descriptors);\n\treturn target;\n};\nconst $context$ = Symbol.for('#context'), $extendType$ = Symbol.for('#extendType');\n\n/*body*/\n// imba$imbaPath=global\n\nimport {Event,CustomEvent,Element,Document} from '../dom/core';\nimport * as helpers from './helpers';\n\nexport function use_events_intersect(){\n\t\n\treturn true;\n};\n\nconst observers = new (globalThis.WeakMap || Map);\nexport const IntersectionEventDefaults = {threshold: [0]};\nconst viewport = {};\nconst defaults = IntersectionEventDefaults;\n\nEvent.intersect$handle = function (){\n\t\n\tlet obs = this.event.detail.observer;\n\treturn this.modifiers._observer == obs;\n};\n\nclass IntersectionEvent extends CustomEvent {\n\t\n\t\n\tαin(){\n\t\t\n\t\treturn this.delta >= 0 && this.entry.isIntersecting;\n\t\t\n\t}\n\tαout(){\n\t\t\n\t\treturn this.delta < 0;// and entry.isIntersecting\n\t\t\n\t}\n\tαcss(name = 'ratio'){\n\t\t\n\t\tthis.target.style.setProperty(\"--ratio\",this.ratio);\n\t\treturn true;\n\t}\n\t\n\tαflag(name,sel){\n\t\t\n\t\tlet {state: state,step: step} = this[$context$];\n\t\tlet el = helpers.toElement(sel || '',this.target);\n\t\t\n\t\tif (this.isIntersecting && !(state[step])) {\n\t\t\t\n\t\t\tel.flags.incr(name);\n\t\t\tstate[step] = true;\n\t\t} else if (state[step] && !(this.isIntersecting)) {\n\t\t\t\n\t\t\tel.flags.decr(name);\n\t\t\tstate[step] = false;\n\t\t};\n\t\treturn true;\n\t}\n\tstatic {\n\t\tdefineName$__(this,'IntersectionEvent');inheritClass$__(this);}\n};\n\n\nfunction callback(name,key){\n\t\n\treturn function(entries,observer) {\n\t\t\n\t\tlet map = observer.prevRatios ||= new WeakMap;\n\t\t\n\t\tfor (let $1 = 0, $2 = iter$__(entries), $3 = $2.length; $1 < $3; $1++) {\n\t\t\tlet entry = $2[$1];\n\t\t\tlet prev = map.get(entry.target) || 0;\n\t\t\tlet ratio = entry.intersectionRatio;\n\t\t\tlet detail = {entry: entry,ratio: ratio,from: prev,delta: (ratio - prev),observer: observer};\n\t\t\tlet e = new CustomEvent(name,{bubbles: false,detail: detail});\n\t\t\te[$extendType$](IntersectionEvent);\n\t\t\te.entry = entry;\n\t\t\te.isIntersecting = entry.isIntersecting;\n\t\t\te.delta = detail.delta;\n\t\t\te.ratio = detail.ratio;\n\t\t\t\n\t\t\tmap.set(entry.target,ratio);\n\t\t\tentry.target.dispatchEvent(e);\n\t\t};\n\t\treturn;\n\t};\n};\n\nfunction getIntersectionObserver(opts = IntersectionEventDefaults){\n\t\n\tlet key = opts.threshold.join('-') + opts.rootMargin;\n\tif (!(opts.root) && IntersectionEventDefaults.root) {\n\t\t\n\t\topts.root ||= IntersectionEventDefaults.root;\n\t};\n\tlet target = opts.root || viewport;\n\tlet map = observers.get(target);\n\tmap || observers.set(target,map = {});\n\treturn map[key] ||= new IntersectionObserver(callback('intersect',key),opts);\n};\n\nclass ΩElement {\n\t\n\ton$intersect(mods,context,handler,o){\n\t\t\n\t\tlet obs;\n\t\tif (mods.options) {\n\t\t\t\n\t\t\tlet th = [];\n\t\t\tlet opts = {threshold: th};\n\t\t\t\n\t\t\tfor (let $4 = 0, $5 = iter$__(mods.options), $6 = $5.length; $4 < $6; $4++) {\n\t\t\t\tlet arg = $5[$4];\n\t\t\t\tif ((arg instanceof Element) || (arg instanceof Document)) {\n\t\t\t\t\t\n\t\t\t\t\topts.root = arg;\n\t\t\t\t} else if (typeof arg == 'number') {\n\t\t\t\t\t\n\t\t\t\t\tth.push(arg);\n\t\t\t\t} else if (typeof arg == 'string') {\n\t\t\t\t\t\n\t\t\t\t\topts.rootMargin = arg;\n\t\t\t\t} else if (typeof arg == 'object') {\n\t\t\t\t\t\n\t\t\t\t\tObject.assign(opts,arg);\n\t\t\t\t\t\n\t\t\t\t};\n\t\t\t};\n\t\t\tif (th.length == 1) {\n\t\t\t\t\n\t\t\t\tlet num = th[0];\n\t\t\t\tif (num > 1) {\n\t\t\t\t\t\n\t\t\t\t\tth[0] = 0;\n\t\t\t\t\twhile (th.length < num){\n\t\t\t\t\t\t\n\t\t\t\t\t\tth.push(th.length / (num - 1));\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t};\n\t\t\t\n\t\t\tif (th.length == 0) { th.push(0) };\n\t\t\tobs = getIntersectionObserver(opts);\n\t\t} else {\n\t\t\t\n\t\t\tobs = getIntersectionObserver();\n\t\t};\n\t\t\n\t\tmods._observer = obs;\n\t\tobs.observe(this);\n\t\tthis.addEventListener('intersect',handler,o);\n\t\treturn handler;\n\t}\n\tstatic {\n\t\tdefineName$__(this,'Element');}\n};\nextend$__(Element.prototype,ΩElement.prototype);\n;\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,","css":""}