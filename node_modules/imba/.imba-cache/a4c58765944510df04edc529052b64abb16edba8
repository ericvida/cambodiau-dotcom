{"id":"dg","warnings":[],"errors":[],"js":"function defineName$__(cls,name){\n\tObject.defineProperty(cls,\"name\",{value:name,configurable:true});\n};\nconst $toStringDeopt$ = Symbol.for('#toStringDeopt'), $__initor__$ = Symbol.for('#__initor__'), $__inited__$ = Symbol.for('#__inited__'), $__hooks__$ = Symbol.for('#__hooks__'), $symbols$ = Symbol.for('#symbols'), $batches$ = Symbol.for('#batches'), $extras$ = Symbol.for('#extras'), $stacks$ = Symbol.for('#stacks');\n\n/*body*/\nexport class Flags {\n\t\n\t\n\tconstructor(dom){\n\t\t\n\t\tthis.dom = dom;\n\t\tthis.string = \"\";\n\t}\n\t\n\tcontains(ref){\n\t\t\n\t\treturn this.dom.classList.contains(ref);\n\t}\n\t\n\tadd(ref){\n\t\t\n\t\tif (this.contains(ref)) { return this };\n\t\tthis.string += (this.string ? ' ' : '') + ref;\n\t\tthis.dom.classList.add(ref);\n\t\treturn this;\n\t}\n\t\n\tremove(ref){\n\t\t\n\t\tif (!(this.contains(ref))) { return this };\n\t\t\n\t\tlet regex = new RegExp('(^|\\\\s)' + ref + '(?=\\\\s|$)','g');\n\t\tthis.string = this.string.replace(regex,'');\n\t\tthis.dom.classList.remove(ref);\n\t\treturn this;\n\t}\n\t\n\ttoggle(ref,bool){\n\t\t\n\t\tif (bool === undefined) { bool = !(this.contains(ref)) };\n\t\treturn bool ? this.add(ref) : this.remove(ref);\n\t\t\n\t}\n\tincr(ref,duration = 0){\n\t\tvar self = this;\n\t\t\n\t\tlet m = this.stacks;\n\t\tlet c = m[ref] || 0;\n\t\tif (c < 1) { this.add(ref) };\n\t\t\n\t\tif (duration > 0) {\n\t\t\t\n\t\t\tsetTimeout(function() { return self.decr(ref); },duration);\n\t\t};\n\t\t\n\t\treturn m[ref] = Math.max(c,0) + 1;\n\t}\n\t\n\tdecr(ref){\n\t\t\n\t\tlet m = this.stacks;\n\t\tlet c = m[ref] || 0;\n\t\tif (c == 1) { this.remove(ref) };\n\t\treturn m[ref] = Math.max(c,1) - 1;\n\t}\n\t\n\treconcile(sym,str){\n\t\t\n\t\tlet syms = this[$symbols$];\n\t\tlet vals = this[$batches$];\n\t\tlet dirty = true;\n\t\tif (!(syms)) {\n\t\t\t\n\t\t\tsyms = this[$symbols$] = [sym];\n\t\t\tvals = this[$batches$] = [str || ''];\n\t\t\tthis.toString = this.valueOf = this[$toStringDeopt$];\n\t\t} else {\n\t\t\t\n\t\t\tlet idx = syms.indexOf(sym);\n\t\t\tlet val = str || '';\n\t\t\tif (idx == -1) {\n\t\t\t\t\n\t\t\t\tsyms.push(sym);\n\t\t\t\tvals.push(val);\n\t\t\t} else if (vals[idx] != val) {\n\t\t\t\t\n\t\t\t\tvals[idx] = val;\n\t\t\t} else {\n\t\t\t\t\n\t\t\t\tdirty = false;\n\t\t\t};\n\t\t};\n\t\t\n\t\tif (dirty) {\n\t\t\t\n\t\t\tthis[$extras$] = ' ' + vals.join(' ');\n\t\t\tthis.sync();\n\t\t};\n\t\treturn;\n\t}\n\t\n\tvalueOf(){\n\t\t\n\t\treturn this.string;\n\t}\n\t\n\ttoString(){\n\t\t\n\t\treturn this.string;\n\t}\n\t\n\t[$toStringDeopt$](){\n\t\t\n\t\treturn this.string + (this[$extras$] || '');\n\t}\n\t\n\tsync(){\n\t\t\n\t\treturn this.dom.flagSync$();\n\t}\n\t\n\tget stacks(){\n\t\t\n\t\treturn this[$stacks$] ||= {};\n\t}\n\tstatic {\n\t\tdefineName$__(this,'Flags');}\n};\n\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZmxhZ3MuaW1iYSIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbImZsYWdzLmltYmEiXSwic291cmNlc0NvbnRlbnQiOlsiZXhwb3J0IGNsYXNzIEZsYWdzXG5cblx0ZGVmIGNvbnN0cnVjdG9yIGRvbVxuXHRcdGRvbSA9IGRvbVxuXHRcdHN0cmluZyA9IFwiXCJcblxuXHRkZWYgY29udGFpbnMgcmVmXG5cdFx0cmV0dXJuIGRvbS5jbGFzc0xpc3QuY29udGFpbnMocmVmKVxuXG5cdGRlZiBhZGQgcmVmXG5cdFx0cmV0dXJuIHNlbGYgaWYgY29udGFpbnMocmVmKVxuXHRcdHN0cmluZyArPSAoc3RyaW5nID8gJyAnIDogJycpICsgcmVmXG5cdFx0ZG9tLmNsYXNzTGlzdC5hZGQocmVmKVxuXHRcdHJldHVybiBzZWxmXG5cblx0ZGVmIHJlbW92ZSByZWZcblx0XHRyZXR1cm4gc2VsZiB1bmxlc3MgY29udGFpbnMocmVmKVxuXHRcblx0XHRsZXQgcmVnZXggPSBuZXcgUmVnRXhwKCcoXnxcXFxccyknICsgcmVmICsgJyg/PVxcXFxzfCQpJywgJ2cnKVxuXHRcdHN0cmluZyA9IHN0cmluZy5yZXBsYWNlKHJlZ2V4LCAnJylcblx0XHRkb20uY2xhc3NMaXN0LnJlbW92ZShyZWYpXG5cdFx0cmV0dXJuIHNlbGZcblxuXHRkZWYgdG9nZ2xlIHJlZiwgYm9vbFxuXHRcdGJvb2wgPSAhY29udGFpbnMocmVmKSBpZiBib29sID09PSB1bmRlZmluZWRcblx0XHRib29sID8gYWRkKHJlZikgOiByZW1vdmUocmVmKVxuXHRcdFxuXHRkZWYgaW5jciByZWYsIGR1cmF0aW9uID0gMFxuXHRcdGxldCBtID0gc3RhY2tzXG5cdFx0bGV0IGMgPSBtW3JlZl0gb3IgMFxuXHRcdGFkZChyZWYpIGlmIGMgPCAxXG5cblx0XHRpZiBkdXJhdGlvbiA+IDBcblx0XHRcdHNldFRpbWVvdXQoJixkdXJhdGlvbikgZG8gZGVjcihyZWYpXG5cblx0XHRyZXR1cm4gbVtyZWZdID0gTWF0aC5tYXgoYywwKSArIDFcblx0XG5cdGRlZiBkZWNyIHJlZlxuXHRcdGxldCBtID0gc3RhY2tzXG5cdFx0bGV0IGMgPSBtW3JlZl0gb3IgMFxuXHRcdHJlbW92ZShyZWYpIGlmIGMgPT0gMVxuXHRcdHJldHVybiBtW3JlZl0gPSBNYXRoLm1heChjLDEpIC0gMVxuXG5cdGRlZiByZWNvbmNpbGUgc3ltLCBzdHJcblx0XHRsZXQgc3ltcyA9ICNzeW1ib2xzXG5cdFx0bGV0IHZhbHMgPSAjYmF0Y2hlc1xuXHRcdGxldCBkaXJ0eSA9IHllc1xuXHRcdHVubGVzcyBzeW1zXG5cdFx0XHRzeW1zID0gI3N5bWJvbHMgPSBbc3ltXVxuXHRcdFx0dmFscyA9ICNiYXRjaGVzID0gW3N0ciBvciAnJ11cblx0XHRcdHNlbGYudG9TdHJpbmcgPSBzZWxmLnZhbHVlT2YgPSBzZWxmLiN0b1N0cmluZ0Rlb3B0XG5cdFx0ZWxzZVxuXHRcdFx0bGV0IGlkeCA9IHN5bXMuaW5kZXhPZihzeW0pXG5cdFx0XHRsZXQgdmFsID0gc3RyIG9yICcnXG5cdFx0XHRpZiBpZHggPT0gLTFcblx0XHRcdFx0c3ltcy5wdXNoKHN5bSlcblx0XHRcdFx0dmFscy5wdXNoKHZhbClcblx0XHRcdGVsaWYgdmFsc1tpZHhdICE9IHZhbFxuXHRcdFx0XHR2YWxzW2lkeF0gPSB2YWxcblx0XHRcdGVsc2Vcblx0XHRcdFx0ZGlydHkgPSBub1xuXHRcdFxuXHRcdGlmIGRpcnR5XG5cdFx0XHQjZXh0cmFzID0gJyAnICsgdmFscy5qb2luKCcgJylcblx0XHRcdHN5bmMhXG5cdFx0cmV0dXJuXG5cblx0ZGVmIHZhbHVlT2Zcblx0XHRzdHJpbmdcblxuXHRkZWYgdG9TdHJpbmdcblx0XHRzdHJpbmdcblxuXHRkZWYgI3RvU3RyaW5nRGVvcHRcblx0XHRzdHJpbmcgKyAoI2V4dHJhcyBvciAnJylcblxuXHRkZWYgc3luY1xuXHRcdGRvbS5mbGFnU3luYyQhXG5cblx0Z2V0IHN0YWNrc1xuXHRcdCNzdGFja3MgfHw9IHt9Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiI7Ozs7OztBQUFBLE1BQU0sQ0FBQyxLQUFLLENBQUMsS0FBSyxFQUFBOzs7Q0FFYixXQUFXLENBQUMsR0FBRyxDQUFBOztPQUNsQixHQUFHLEdBQUcsR0FBRztFQUNULEtBQUEsTUFBTSxHQUFHLEVBQUU7RUFBQTs7Q0FFUixRQUFRLENBQUMsR0FBRyxDQUFBOztFQUNmLE1BQU0sQ0FBQyxLQUFBLEdBQUcsQ0FBQyxTQUFTLENBQUMsUUFBUSxDQUFDLEdBQUcsQ0FBQztFQUFBOztDQUUvQixHQUFHLENBQUMsR0FBRyxDQUFBOztFQUNFLEVBQUUsRUFBQyxLQUFBLFFBQVEsQ0FBQyxHQUFHLENBQUMsRUFBNUIsRUFBQSxNQUFNLENBQUMsSUFBSSxFQUFBO0VBQ1gsS0FBQSxNQUFNLEtBQUssS0FBQSxNQUFNLEdBQUcsR0FBRyxHQUFHLEVBQUUsRUFBRSxDQUFDLENBQUMsR0FBRztFQUNuQyxLQUFBLEdBQUcsQ0FBQyxTQUFTLENBQUMsR0FBRyxDQUFDLEdBQUcsQ0FBQztFQUN0QixNQUFNLENBQUMsSUFBSTtFQUFBOztDQUVSLE1BQU0sQ0FBQyxHQUFHLENBQUE7O0VBQ0QsRUFBTSxJQUFDLEtBQUEsUUFBUSxDQUFDLEdBQUcsQ0FBQyxHQUFoQyxFQUFBLE1BQU0sQ0FBQyxJQUFJLEVBQUE7O0VBRVAsSUFBQSxLQUFLLEdBQU8sR0FBRCxDQUFDLE1BQU0sQ0FBQyxTQUFTLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQyxDQUFDLENBQUMsV0FBVyxDQUFFLEdBQUcsQ0FBQztFQUMxRCxLQUFBLE1BQU0sR0FBRyxLQUFBLE1BQU0sQ0FBQyxPQUFPLENBQUMsS0FBSyxDQUFFLEVBQUUsQ0FBQztFQUNsQyxLQUFBLEdBQUcsQ0FBQyxTQUFTLENBQUMsTUFBTSxDQUFDLEdBQUcsQ0FBQztFQUN6QixNQUFNLENBQUMsSUFBSTtFQUFBOztDQUVSLE1BQU0sQ0FBQyxHQUFHLENBQUUsSUFBSSxDQUFBOztFQUNHLEVBQUUsRUFBQyxJQUFJLENBQUMsR0FBRyxDQUFDLFNBQVMsRUFBM0MsRUFBQSxJQUFJLEtBQUksS0FBQSxRQUFRLENBQUMsR0FBRyxDQUFDO1NBQ3JCLElBQUksR0FBRyxLQUFBLEdBQUcsQ0FBQyxHQUFHLENBQUMsR0FBRyxLQUFBLE1BQU0sQ0FBQyxHQUFHLENBQUM7O0VBQUE7Q0FFMUIsSUFBSSxDQUFDLEdBQUcsQ0FBRSxRQUFRLEdBQUcsQ0FBQyxDQUFBOzs7RUFDckIsSUFBQSxDQUFDLEdBQUcsS0FBQSxNQUFNO0VBQ1YsSUFBQSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEdBQUcsQ0FBQSxDQUFFLEVBQUUsQ0FBQyxDQUFDO0VBQ1YsRUFBRSxFQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxJQUFqQixLQUFBLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBQTs7RUFFUixFQUFFLEVBQUMsUUFBUSxDQUFDLENBQUMsQ0FBQyxDQUFDLEVBQUE7O0dBQ2QsVUFBVSxDQUFhLFFBQUUsWUFBQyxLQUFBLElBQUksQ0FBQyxHQUFHLENBQUMsR0FBQSxDQUF0QixRQUFRLENBQUM7R0FBYTs7RUFFcEMsTUFBTSxDQUFDLENBQUMsQ0FBQyxHQUFHLENBQUEsR0FBSSxJQUFJLENBQUMsR0FBRyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQztFQUFBOztDQUU5QixJQUFJLENBQUMsR0FBRyxDQUFBOztFQUNQLElBQUEsQ0FBQyxHQUFHLEtBQUEsTUFBTTtFQUNWLElBQUEsQ0FBQyxHQUFHLENBQUMsQ0FBQyxHQUFHLENBQUEsQ0FBRSxFQUFFLENBQUMsQ0FBQztFQUNQLEVBQUUsRUFBQyxDQUFDLENBQUMsRUFBRSxDQUFDLENBQUMsSUFBckIsS0FBQSxNQUFNLENBQUMsR0FBRyxDQUFDLEVBQUE7RUFDWCxNQUFNLENBQUMsQ0FBQyxDQUFDLEdBQUcsQ0FBQSxHQUFJLElBQUksQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDLENBQUMsQ0FBQyxDQUFDO0VBQUE7O0NBRTlCLFNBQVMsQ0FBQyxHQUFHLENBQUUsR0FBRyxDQUFBOztFQUNqQixJQUFBLElBQUksa0JBQVc7RUFDZixJQUFBLElBQUksa0JBQVc7RUFDZixJQUFBLEtBQUssR0FBRyxJQUFHO0VBQ2YsRUFBTSxFQUFDLEVBQUEsSUFBSSxHQUFBOztHQUNWLElBQUksa0JBQVcsR0FBRyxDQUFDLEdBQUcsQ0FBQTtHQUN0QixJQUFJLGtCQUFXLEdBQUcsQ0FBQyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUU7R0FDNUIsSUFBSSxDQUFDLFFBQVEsR0FBRyxJQUFJLENBQUMsT0FBTyxHQUFHLElBQUksaUJBQWU7R0FBQSxNQUMvQzs7R0FDQyxJQUFBLEdBQUcsR0FBRyxJQUFJLENBQUMsT0FBTyxDQUFDLEdBQUcsQ0FBQztHQUN2QixJQUFBLEdBQUcsR0FBRyxHQUFHLENBQUMsRUFBRSxDQUFDLEVBQUU7R0FDbkIsRUFBRSxFQUFDLEdBQUcsQ0FBQyxFQUFFLENBQUMsRUFBRSxFQUFBOztJQUNYLElBQUksQ0FBQyxJQUFJLENBQUMsR0FBRyxDQUFDO0lBQ2QsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7SUFBQSxNQUNmLEVBQUEsRUFBSyxJQUFJLENBQUMsR0FBRyxDQUFBLENBQUUsRUFBRSxDQUFDLEdBQUcsRUFBQTs7SUFDcEIsSUFBSSxDQUFDLEdBQUcsQ0FBQSxHQUFJLEdBQUc7SUFBQSxNQUNaOztJQUNILEtBQUssR0FBRyxLQUFFO0lBQUE7R0FBQTs7RUFFWixFQUFFLEVBQUMsS0FBSyxFQUFBOztpQkFDQSxHQUFHLEdBQUcsQ0FBQyxDQUFDLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxHQUFHLENBQUM7R0FDOUIsS0FBQSxJQUFJLEVBQUM7R0FBQTtFQUNOLE1BQU07RUFBQTs7Q0FFSCxPQUFPLEVBQUE7O0VBQ1YsT0FBQSxLQUFBLE1BQU07RUFBQTs7Q0FFSCxRQUFRLEVBQUE7O0VBQ1gsT0FBQSxLQUFBLE1BQU07RUFBQTs7b0JBRVc7O0VBQ2pCLE9BQUEsS0FBQSxNQUFNLENBQUMsQ0FBQyxnQkFBUyxDQUFDLEVBQUUsQ0FBQyxFQUFFO0VBQUM7O0NBRXJCLElBQUksRUFBQTs7RUFDUCxPQUFBLEtBQUEsR0FBRyxDQUFDLFNBQVMsRUFBQztFQUFBOztDQUVmLEdBQUcsQ0FBQyxNQUFNLEVBQUE7O3VCQUNGLEtBQUssRUFBRTtFQUFBOzs7QUFBQSxDQUFBO0FBQUE7In0=","css":""}